/*
 * lodgea-csharp
 *
 * LODGEA SDK for csharp. Check out https://docs.lodgea.io for more information.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: support@lodgea.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = lodgea-csharp.Client.OpenAPIDateConverter;

namespace lodgea-csharp.com.lodgea.model
{
    /// <summary>
    /// AvailablePropertiesInner1
    /// </summary>
    [DataContract]
    public partial class AvailablePropertiesInner1 :  IEquatable<AvailablePropertiesInner1>, IValidatableObject
    {
        /// <summary>
        /// The language code of the language in which the property description is written.&lt;p&gt;Please note that beside the general restrictions listed below only languages configured during system setup for your respective tenant are allowed.&lt;/p&gt;&lt;p&gt;See also &lt;a href&#x3D;\&quot;#isolanguage-codes\&quot;&gt;in the appendix&lt;/a&gt;.&lt;/p&gt;
        /// </summary>
        /// <value>The language code of the language in which the property description is written.&lt;p&gt;Please note that beside the general restrictions listed below only languages configured during system setup for your respective tenant are allowed.&lt;/p&gt;&lt;p&gt;See also &lt;a href&#x3D;\&quot;#isolanguage-codes\&quot;&gt;in the appendix&lt;/a&gt;.&lt;/p&gt;</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum LanguageCodeEnum
        {
            /// <summary>
            /// Enum Af for value: af
            /// </summary>
            [EnumMember(Value = "af")]
            Af = 1,

            /// <summary>
            /// Enum Ar for value: ar
            /// </summary>
            [EnumMember(Value = "ar")]
            Ar = 2,

            /// <summary>
            /// Enum Bg for value: bg
            /// </summary>
            [EnumMember(Value = "bg")]
            Bg = 3,

            /// <summary>
            /// Enum Ca for value: ca
            /// </summary>
            [EnumMember(Value = "ca")]
            Ca = 4,

            /// <summary>
            /// Enum Cs for value: cs
            /// </summary>
            [EnumMember(Value = "cs")]
            Cs = 5,

            /// <summary>
            /// Enum Da for value: da
            /// </summary>
            [EnumMember(Value = "da")]
            Da = 6,

            /// <summary>
            /// Enum De for value: de
            /// </summary>
            [EnumMember(Value = "de")]
            De = 7,

            /// <summary>
            /// Enum El for value: el
            /// </summary>
            [EnumMember(Value = "el")]
            El = 8,

            /// <summary>
            /// Enum En for value: en
            /// </summary>
            [EnumMember(Value = "en")]
            En = 9,

            /// <summary>
            /// Enum Es for value: es
            /// </summary>
            [EnumMember(Value = "es")]
            Es = 10,

            /// <summary>
            /// Enum Et for value: et
            /// </summary>
            [EnumMember(Value = "et")]
            Et = 11,

            /// <summary>
            /// Enum Fi for value: fi
            /// </summary>
            [EnumMember(Value = "fi")]
            Fi = 12,

            /// <summary>
            /// Enum Fr for value: fr
            /// </summary>
            [EnumMember(Value = "fr")]
            Fr = 13,

            /// <summary>
            /// Enum He for value: he
            /// </summary>
            [EnumMember(Value = "he")]
            He = 14,

            /// <summary>
            /// Enum Hi for value: hi
            /// </summary>
            [EnumMember(Value = "hi")]
            Hi = 15,

            /// <summary>
            /// Enum Hr for value: hr
            /// </summary>
            [EnumMember(Value = "hr")]
            Hr = 16,

            /// <summary>
            /// Enum Hu for value: hu
            /// </summary>
            [EnumMember(Value = "hu")]
            Hu = 17,

            /// <summary>
            /// Enum Id for value: id
            /// </summary>
            [EnumMember(Value = "id")]
            Id = 18,

            /// <summary>
            /// Enum Is for value: is
            /// </summary>
            [EnumMember(Value = "is")]
            Is = 19,

            /// <summary>
            /// Enum It for value: it
            /// </summary>
            [EnumMember(Value = "it")]
            It = 20,

            /// <summary>
            /// Enum Ja for value: ja
            /// </summary>
            [EnumMember(Value = "ja")]
            Ja = 21,

            /// <summary>
            /// Enum Ko for value: ko
            /// </summary>
            [EnumMember(Value = "ko")]
            Ko = 22,

            /// <summary>
            /// Enum Lt for value: lt
            /// </summary>
            [EnumMember(Value = "lt")]
            Lt = 23,

            /// <summary>
            /// Enum Lv for value: lv
            /// </summary>
            [EnumMember(Value = "lv")]
            Lv = 24,

            /// <summary>
            /// Enum Nl for value: nl
            /// </summary>
            [EnumMember(Value = "nl")]
            Nl = 25,

            /// <summary>
            /// Enum No for value: no
            /// </summary>
            [EnumMember(Value = "no")]
            No = 26,

            /// <summary>
            /// Enum Pl for value: pl
            /// </summary>
            [EnumMember(Value = "pl")]
            Pl = 27,

            /// <summary>
            /// Enum Pt for value: pt
            /// </summary>
            [EnumMember(Value = "pt")]
            Pt = 28,

            /// <summary>
            /// Enum Ro for value: ro
            /// </summary>
            [EnumMember(Value = "ro")]
            Ro = 29,

            /// <summary>
            /// Enum Ru for value: ru
            /// </summary>
            [EnumMember(Value = "ru")]
            Ru = 30,

            /// <summary>
            /// Enum Sk for value: sk
            /// </summary>
            [EnumMember(Value = "sk")]
            Sk = 31,

            /// <summary>
            /// Enum Sl for value: sl
            /// </summary>
            [EnumMember(Value = "sl")]
            Sl = 32,

            /// <summary>
            /// Enum Sr for value: sr
            /// </summary>
            [EnumMember(Value = "sr")]
            Sr = 33,

            /// <summary>
            /// Enum Sv for value: sv
            /// </summary>
            [EnumMember(Value = "sv")]
            Sv = 34,

            /// <summary>
            /// Enum Th for value: th
            /// </summary>
            [EnumMember(Value = "th")]
            Th = 35,

            /// <summary>
            /// Enum Tr for value: tr
            /// </summary>
            [EnumMember(Value = "tr")]
            Tr = 36,

            /// <summary>
            /// Enum Vi for value: vi
            /// </summary>
            [EnumMember(Value = "vi")]
            Vi = 37,

            /// <summary>
            /// Enum Zh for value: zh
            /// </summary>
            [EnumMember(Value = "zh")]
            Zh = 38

        }

        /// <summary>
        /// The language code of the language in which the property description is written.&lt;p&gt;Please note that beside the general restrictions listed below only languages configured during system setup for your respective tenant are allowed.&lt;/p&gt;&lt;p&gt;See also &lt;a href&#x3D;\&quot;#isolanguage-codes\&quot;&gt;in the appendix&lt;/a&gt;.&lt;/p&gt;
        /// </summary>
        /// <value>The language code of the language in which the property description is written.&lt;p&gt;Please note that beside the general restrictions listed below only languages configured during system setup for your respective tenant are allowed.&lt;/p&gt;&lt;p&gt;See also &lt;a href&#x3D;\&quot;#isolanguage-codes\&quot;&gt;in the appendix&lt;/a&gt;.&lt;/p&gt;</value>
        [DataMember(Name="languageCode", EmitDefaultValue=true)]
        public LanguageCodeEnum LanguageCode { get; set; }
        /// <summary>
        /// The currency code for the currency in which prices are returned.&lt;p&gt;See also &lt;a href&#x3D;\&quot;#currencycodes\&quot;&gt;in the appendix&lt;/a&gt;.&lt;/p&gt;
        /// </summary>
        /// <value>The currency code for the currency in which prices are returned.&lt;p&gt;See also &lt;a href&#x3D;\&quot;#currencycodes\&quot;&gt;in the appendix&lt;/a&gt;.&lt;/p&gt;</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum CurrencyCodeEnum
        {
            /// <summary>
            /// Enum AED for value: AED
            /// </summary>
            [EnumMember(Value = "AED")]
            AED = 1,

            /// <summary>
            /// Enum ARS for value: ARS
            /// </summary>
            [EnumMember(Value = "ARS")]
            ARS = 2,

            /// <summary>
            /// Enum AUD for value: AUD
            /// </summary>
            [EnumMember(Value = "AUD")]
            AUD = 3,

            /// <summary>
            /// Enum AZN for value: AZN
            /// </summary>
            [EnumMember(Value = "AZN")]
            AZN = 4,

            /// <summary>
            /// Enum BGN for value: BGN
            /// </summary>
            [EnumMember(Value = "BGN")]
            BGN = 5,

            /// <summary>
            /// Enum BHD for value: BHD
            /// </summary>
            [EnumMember(Value = "BHD")]
            BHD = 6,

            /// <summary>
            /// Enum BRL for value: BRL
            /// </summary>
            [EnumMember(Value = "BRL")]
            BRL = 7,

            /// <summary>
            /// Enum CAD for value: CAD
            /// </summary>
            [EnumMember(Value = "CAD")]
            CAD = 8,

            /// <summary>
            /// Enum CHF for value: CHF
            /// </summary>
            [EnumMember(Value = "CHF")]
            CHF = 9,

            /// <summary>
            /// Enum CLP for value: CLP
            /// </summary>
            [EnumMember(Value = "CLP")]
            CLP = 10,

            /// <summary>
            /// Enum CNY for value: CNY
            /// </summary>
            [EnumMember(Value = "CNY")]
            CNY = 11,

            /// <summary>
            /// Enum COP for value: COP
            /// </summary>
            [EnumMember(Value = "COP")]
            COP = 12,

            /// <summary>
            /// Enum CZK for value: CZK
            /// </summary>
            [EnumMember(Value = "CZK")]
            CZK = 13,

            /// <summary>
            /// Enum DKK for value: DKK
            /// </summary>
            [EnumMember(Value = "DKK")]
            DKK = 14,

            /// <summary>
            /// Enum EGP for value: EGP
            /// </summary>
            [EnumMember(Value = "EGP")]
            EGP = 15,

            /// <summary>
            /// Enum EUR for value: EUR
            /// </summary>
            [EnumMember(Value = "EUR")]
            EUR = 16,

            /// <summary>
            /// Enum FJD for value: FJD
            /// </summary>
            [EnumMember(Value = "FJD")]
            FJD = 17,

            /// <summary>
            /// Enum GBP for value: GBP
            /// </summary>
            [EnumMember(Value = "GBP")]
            GBP = 18,

            /// <summary>
            /// Enum GEL for value: GEL
            /// </summary>
            [EnumMember(Value = "GEL")]
            GEL = 19,

            /// <summary>
            /// Enum HKD for value: HKD
            /// </summary>
            [EnumMember(Value = "HKD")]
            HKD = 20,

            /// <summary>
            /// Enum HUF for value: HUF
            /// </summary>
            [EnumMember(Value = "HUF")]
            HUF = 21,

            /// <summary>
            /// Enum IDR for value: IDR
            /// </summary>
            [EnumMember(Value = "IDR")]
            IDR = 22,

            /// <summary>
            /// Enum ILS for value: ILS
            /// </summary>
            [EnumMember(Value = "ILS")]
            ILS = 23,

            /// <summary>
            /// Enum INR for value: INR
            /// </summary>
            [EnumMember(Value = "INR")]
            INR = 24,

            /// <summary>
            /// Enum JOD for value: JOD
            /// </summary>
            [EnumMember(Value = "JOD")]
            JOD = 25,

            /// <summary>
            /// Enum JPY for value: JPY
            /// </summary>
            [EnumMember(Value = "JPY")]
            JPY = 26,

            /// <summary>
            /// Enum KRW for value: KRW
            /// </summary>
            [EnumMember(Value = "KRW")]
            KRW = 27,

            /// <summary>
            /// Enum KWD for value: KWD
            /// </summary>
            [EnumMember(Value = "KWD")]
            KWD = 28,

            /// <summary>
            /// Enum KZT for value: KZT
            /// </summary>
            [EnumMember(Value = "KZT")]
            KZT = 29,

            /// <summary>
            /// Enum MDL for value: MDL
            /// </summary>
            [EnumMember(Value = "MDL")]
            MDL = 30,

            /// <summary>
            /// Enum MXN for value: MXN
            /// </summary>
            [EnumMember(Value = "MXN")]
            MXN = 31,

            /// <summary>
            /// Enum MYR for value: MYR
            /// </summary>
            [EnumMember(Value = "MYR")]
            MYR = 32,

            /// <summary>
            /// Enum NAD for value: NAD
            /// </summary>
            [EnumMember(Value = "NAD")]
            NAD = 33,

            /// <summary>
            /// Enum NOK for value: NOK
            /// </summary>
            [EnumMember(Value = "NOK")]
            NOK = 34,

            /// <summary>
            /// Enum NZD for value: NZD
            /// </summary>
            [EnumMember(Value = "NZD")]
            NZD = 35,

            /// <summary>
            /// Enum OMR for value: OMR
            /// </summary>
            [EnumMember(Value = "OMR")]
            OMR = 36,

            /// <summary>
            /// Enum PLN for value: PLN
            /// </summary>
            [EnumMember(Value = "PLN")]
            PLN = 37,

            /// <summary>
            /// Enum QAR for value: QAR
            /// </summary>
            [EnumMember(Value = "QAR")]
            QAR = 38,

            /// <summary>
            /// Enum RON for value: RON
            /// </summary>
            [EnumMember(Value = "RON")]
            RON = 39,

            /// <summary>
            /// Enum RUB for value: RUB
            /// </summary>
            [EnumMember(Value = "RUB")]
            RUB = 40,

            /// <summary>
            /// Enum SAR for value: SAR
            /// </summary>
            [EnumMember(Value = "SAR")]
            SAR = 41,

            /// <summary>
            /// Enum SEK for value: SEK
            /// </summary>
            [EnumMember(Value = "SEK")]
            SEK = 42,

            /// <summary>
            /// Enum SGD for value: SGD
            /// </summary>
            [EnumMember(Value = "SGD")]
            SGD = 43,

            /// <summary>
            /// Enum THB for value: THB
            /// </summary>
            [EnumMember(Value = "THB")]
            THB = 44,

            /// <summary>
            /// Enum TRY for value: TRY
            /// </summary>
            [EnumMember(Value = "TRY")]
            TRY = 45,

            /// <summary>
            /// Enum TWD for value: TWD
            /// </summary>
            [EnumMember(Value = "TWD")]
            TWD = 46,

            /// <summary>
            /// Enum UAH for value: UAH
            /// </summary>
            [EnumMember(Value = "UAH")]
            UAH = 47,

            /// <summary>
            /// Enum USD for value: USD
            /// </summary>
            [EnumMember(Value = "USD")]
            USD = 48,

            /// <summary>
            /// Enum XOF for value: XOF
            /// </summary>
            [EnumMember(Value = "XOF")]
            XOF = 49,

            /// <summary>
            /// Enum ZAR for value: ZAR
            /// </summary>
            [EnumMember(Value = "ZAR")]
            ZAR = 50

        }

        /// <summary>
        /// The currency code for the currency in which prices are returned.&lt;p&gt;See also &lt;a href&#x3D;\&quot;#currencycodes\&quot;&gt;in the appendix&lt;/a&gt;.&lt;/p&gt;
        /// </summary>
        /// <value>The currency code for the currency in which prices are returned.&lt;p&gt;See also &lt;a href&#x3D;\&quot;#currencycodes\&quot;&gt;in the appendix&lt;/a&gt;.&lt;/p&gt;</value>
        [DataMember(Name="currencyCode", EmitDefaultValue=true)]
        public CurrencyCodeEnum CurrencyCode { get; set; }
        /// <summary>
        /// The unit system (either \&quot;metric\&quot; or \&quot;imperial\&quot;) used for measurements.
        /// </summary>
        /// <value>The unit system (either \&quot;metric\&quot; or \&quot;imperial\&quot;) used for measurements.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum UnitSystemEnum
        {
            /// <summary>
            /// Enum Metric for value: metric
            /// </summary>
            [EnumMember(Value = "metric")]
            Metric = 1,

            /// <summary>
            /// Enum Imperial for value: imperial
            /// </summary>
            [EnumMember(Value = "imperial")]
            Imperial = 2

        }

        /// <summary>
        /// The unit system (either \&quot;metric\&quot; or \&quot;imperial\&quot;) used for measurements.
        /// </summary>
        /// <value>The unit system (either \&quot;metric\&quot; or \&quot;imperial\&quot;) used for measurements.</value>
        [DataMember(Name="unitSystem", EmitDefaultValue=true)]
        public UnitSystemEnum UnitSystem { get; set; }
        /// <summary>
        /// Defines ServiceList
        /// </summary>
        public enum ServiceListEnum
        {
            /// <summary>
            /// Enum _1 for value: 1
            /// </summary>
            [EnumMember(Value = "1")]
            _1 = 1,

            /// <summary>
            /// Enum _2 for value: 2
            /// </summary>
            [EnumMember(Value = "2")]
            _2 = 2,

            /// <summary>
            /// Enum _3 for value: 3
            /// </summary>
            [EnumMember(Value = "3")]
            _3 = 3,

            /// <summary>
            /// Enum _4 for value: 4
            /// </summary>
            [EnumMember(Value = "4")]
            _4 = 4,

            /// <summary>
            /// Enum _5 for value: 5
            /// </summary>
            [EnumMember(Value = "5")]
            _5 = 5,

            /// <summary>
            /// Enum _6 for value: 6
            /// </summary>
            [EnumMember(Value = "6")]
            _6 = 6,

            /// <summary>
            /// Enum _7 for value: 7
            /// </summary>
            [EnumMember(Value = "7")]
            _7 = 7,

            /// <summary>
            /// Enum _8 for value: 8
            /// </summary>
            [EnumMember(Value = "8")]
            _8 = 8,

            /// <summary>
            /// Enum _9 for value: 9
            /// </summary>
            [EnumMember(Value = "9")]
            _9 = 9,

            /// <summary>
            /// Enum _10 for value: 10
            /// </summary>
            [EnumMember(Value = "10")]
            _10 = 10,

            /// <summary>
            /// Enum _11 for value: 11
            /// </summary>
            [EnumMember(Value = "11")]
            _11 = 11,

            /// <summary>
            /// Enum _12 for value: 12
            /// </summary>
            [EnumMember(Value = "12")]
            _12 = 12,

            /// <summary>
            /// Enum _13 for value: 13
            /// </summary>
            [EnumMember(Value = "13")]
            _13 = 13,

            /// <summary>
            /// Enum _14 for value: 14
            /// </summary>
            [EnumMember(Value = "14")]
            _14 = 14,

            /// <summary>
            /// Enum _15 for value: 15
            /// </summary>
            [EnumMember(Value = "15")]
            _15 = 15,

            /// <summary>
            /// Enum _16 for value: 16
            /// </summary>
            [EnumMember(Value = "16")]
            _16 = 16,

            /// <summary>
            /// Enum _17 for value: 17
            /// </summary>
            [EnumMember(Value = "17")]
            _17 = 17,

            /// <summary>
            /// Enum _18 for value: 18
            /// </summary>
            [EnumMember(Value = "18")]
            _18 = 18,

            /// <summary>
            /// Enum _19 for value: 19
            /// </summary>
            [EnumMember(Value = "19")]
            _19 = 19,

            /// <summary>
            /// Enum _20 for value: 20
            /// </summary>
            [EnumMember(Value = "20")]
            _20 = 20,

            /// <summary>
            /// Enum _21 for value: 21
            /// </summary>
            [EnumMember(Value = "21")]
            _21 = 21,

            /// <summary>
            /// Enum _22 for value: 22
            /// </summary>
            [EnumMember(Value = "22")]
            _22 = 22,

            /// <summary>
            /// Enum _23 for value: 23
            /// </summary>
            [EnumMember(Value = "23")]
            _23 = 23,

            /// <summary>
            /// Enum _24 for value: 24
            /// </summary>
            [EnumMember(Value = "24")]
            _24 = 24,

            /// <summary>
            /// Enum _25 for value: 25
            /// </summary>
            [EnumMember(Value = "25")]
            _25 = 25,

            /// <summary>
            /// Enum _26 for value: 26
            /// </summary>
            [EnumMember(Value = "26")]
            _26 = 26,

            /// <summary>
            /// Enum _27 for value: 27
            /// </summary>
            [EnumMember(Value = "27")]
            _27 = 27,

            /// <summary>
            /// Enum _28 for value: 28
            /// </summary>
            [EnumMember(Value = "28")]
            _28 = 28,

            /// <summary>
            /// Enum _29 for value: 29
            /// </summary>
            [EnumMember(Value = "29")]
            _29 = 29,

            /// <summary>
            /// Enum _30 for value: 30
            /// </summary>
            [EnumMember(Value = "30")]
            _30 = 30,

            /// <summary>
            /// Enum _31 for value: 31
            /// </summary>
            [EnumMember(Value = "31")]
            _31 = 31,

            /// <summary>
            /// Enum _32 for value: 32
            /// </summary>
            [EnumMember(Value = "32")]
            _32 = 32,

            /// <summary>
            /// Enum _33 for value: 33
            /// </summary>
            [EnumMember(Value = "33")]
            _33 = 33,

            /// <summary>
            /// Enum _34 for value: 34
            /// </summary>
            [EnumMember(Value = "34")]
            _34 = 34,

            /// <summary>
            /// Enum _35 for value: 35
            /// </summary>
            [EnumMember(Value = "35")]
            _35 = 35,

            /// <summary>
            /// Enum _36 for value: 36
            /// </summary>
            [EnumMember(Value = "36")]
            _36 = 36,

            /// <summary>
            /// Enum _37 for value: 37
            /// </summary>
            [EnumMember(Value = "37")]
            _37 = 37,

            /// <summary>
            /// Enum _38 for value: 38
            /// </summary>
            [EnumMember(Value = "38")]
            _38 = 38,

            /// <summary>
            /// Enum _39 for value: 39
            /// </summary>
            [EnumMember(Value = "39")]
            _39 = 39,

            /// <summary>
            /// Enum _40 for value: 40
            /// </summary>
            [EnumMember(Value = "40")]
            _40 = 40,

            /// <summary>
            /// Enum _41 for value: 41
            /// </summary>
            [EnumMember(Value = "41")]
            _41 = 41,

            /// <summary>
            /// Enum _42 for value: 42
            /// </summary>
            [EnumMember(Value = "42")]
            _42 = 42,

            /// <summary>
            /// Enum _43 for value: 43
            /// </summary>
            [EnumMember(Value = "43")]
            _43 = 43,

            /// <summary>
            /// Enum _44 for value: 44
            /// </summary>
            [EnumMember(Value = "44")]
            _44 = 44,

            /// <summary>
            /// Enum _45 for value: 45
            /// </summary>
            [EnumMember(Value = "45")]
            _45 = 45,

            /// <summary>
            /// Enum _46 for value: 46
            /// </summary>
            [EnumMember(Value = "46")]
            _46 = 46,

            /// <summary>
            /// Enum _47 for value: 47
            /// </summary>
            [EnumMember(Value = "47")]
            _47 = 47,

            /// <summary>
            /// Enum _48 for value: 48
            /// </summary>
            [EnumMember(Value = "48")]
            _48 = 48,

            /// <summary>
            /// Enum _49 for value: 49
            /// </summary>
            [EnumMember(Value = "49")]
            _49 = 49,

            /// <summary>
            /// Enum _50 for value: 50
            /// </summary>
            [EnumMember(Value = "50")]
            _50 = 50,

            /// <summary>
            /// Enum _51 for value: 51
            /// </summary>
            [EnumMember(Value = "51")]
            _51 = 51,

            /// <summary>
            /// Enum _52 for value: 52
            /// </summary>
            [EnumMember(Value = "52")]
            _52 = 52,

            /// <summary>
            /// Enum _53 for value: 53
            /// </summary>
            [EnumMember(Value = "53")]
            _53 = 53,

            /// <summary>
            /// Enum _54 for value: 54
            /// </summary>
            [EnumMember(Value = "54")]
            _54 = 54,

            /// <summary>
            /// Enum _55 for value: 55
            /// </summary>
            [EnumMember(Value = "55")]
            _55 = 55,

            /// <summary>
            /// Enum _56 for value: 56
            /// </summary>
            [EnumMember(Value = "56")]
            _56 = 56,

            /// <summary>
            /// Enum _57 for value: 57
            /// </summary>
            [EnumMember(Value = "57")]
            _57 = 57,

            /// <summary>
            /// Enum _58 for value: 58
            /// </summary>
            [EnumMember(Value = "58")]
            _58 = 58,

            /// <summary>
            /// Enum _59 for value: 59
            /// </summary>
            [EnumMember(Value = "59")]
            _59 = 59,

            /// <summary>
            /// Enum _60 for value: 60
            /// </summary>
            [EnumMember(Value = "60")]
            _60 = 60,

            /// <summary>
            /// Enum _61 for value: 61
            /// </summary>
            [EnumMember(Value = "61")]
            _61 = 61,

            /// <summary>
            /// Enum _62 for value: 62
            /// </summary>
            [EnumMember(Value = "62")]
            _62 = 62,

            /// <summary>
            /// Enum _63 for value: 63
            /// </summary>
            [EnumMember(Value = "63")]
            _63 = 63,

            /// <summary>
            /// Enum _64 for value: 64
            /// </summary>
            [EnumMember(Value = "64")]
            _64 = 64,

            /// <summary>
            /// Enum _65 for value: 65
            /// </summary>
            [EnumMember(Value = "65")]
            _65 = 65,

            /// <summary>
            /// Enum _66 for value: 66
            /// </summary>
            [EnumMember(Value = "66")]
            _66 = 66,

            /// <summary>
            /// Enum _67 for value: 67
            /// </summary>
            [EnumMember(Value = "67")]
            _67 = 67,

            /// <summary>
            /// Enum _68 for value: 68
            /// </summary>
            [EnumMember(Value = "68")]
            _68 = 68,

            /// <summary>
            /// Enum _69 for value: 69
            /// </summary>
            [EnumMember(Value = "69")]
            _69 = 69,

            /// <summary>
            /// Enum _70 for value: 70
            /// </summary>
            [EnumMember(Value = "70")]
            _70 = 70,

            /// <summary>
            /// Enum _71 for value: 71
            /// </summary>
            [EnumMember(Value = "71")]
            _71 = 71,

            /// <summary>
            /// Enum _72 for value: 72
            /// </summary>
            [EnumMember(Value = "72")]
            _72 = 72,

            /// <summary>
            /// Enum _73 for value: 73
            /// </summary>
            [EnumMember(Value = "73")]
            _73 = 73,

            /// <summary>
            /// Enum _74 for value: 74
            /// </summary>
            [EnumMember(Value = "74")]
            _74 = 74,

            /// <summary>
            /// Enum _75 for value: 75
            /// </summary>
            [EnumMember(Value = "75")]
            _75 = 75,

            /// <summary>
            /// Enum _76 for value: 76
            /// </summary>
            [EnumMember(Value = "76")]
            _76 = 76,

            /// <summary>
            /// Enum _77 for value: 77
            /// </summary>
            [EnumMember(Value = "77")]
            _77 = 77,

            /// <summary>
            /// Enum _78 for value: 78
            /// </summary>
            [EnumMember(Value = "78")]
            _78 = 78,

            /// <summary>
            /// Enum _79 for value: 79
            /// </summary>
            [EnumMember(Value = "79")]
            _79 = 79,

            /// <summary>
            /// Enum _80 for value: 80
            /// </summary>
            [EnumMember(Value = "80")]
            _80 = 80,

            /// <summary>
            /// Enum _81 for value: 81
            /// </summary>
            [EnumMember(Value = "81")]
            _81 = 81,

            /// <summary>
            /// Enum _82 for value: 82
            /// </summary>
            [EnumMember(Value = "82")]
            _82 = 82,

            /// <summary>
            /// Enum _83 for value: 83
            /// </summary>
            [EnumMember(Value = "83")]
            _83 = 83,

            /// <summary>
            /// Enum _84 for value: 84
            /// </summary>
            [EnumMember(Value = "84")]
            _84 = 84,

            /// <summary>
            /// Enum _85 for value: 85
            /// </summary>
            [EnumMember(Value = "85")]
            _85 = 85,

            /// <summary>
            /// Enum _86 for value: 86
            /// </summary>
            [EnumMember(Value = "86")]
            _86 = 86,

            /// <summary>
            /// Enum _87 for value: 87
            /// </summary>
            [EnumMember(Value = "87")]
            _87 = 87,

            /// <summary>
            /// Enum _88 for value: 88
            /// </summary>
            [EnumMember(Value = "88")]
            _88 = 88,

            /// <summary>
            /// Enum _89 for value: 89
            /// </summary>
            [EnumMember(Value = "89")]
            _89 = 89,

            /// <summary>
            /// Enum _90 for value: 90
            /// </summary>
            [EnumMember(Value = "90")]
            _90 = 90,

            /// <summary>
            /// Enum _91 for value: 91
            /// </summary>
            [EnumMember(Value = "91")]
            _91 = 91,

            /// <summary>
            /// Enum _92 for value: 92
            /// </summary>
            [EnumMember(Value = "92")]
            _92 = 92,

            /// <summary>
            /// Enum _93 for value: 93
            /// </summary>
            [EnumMember(Value = "93")]
            _93 = 93,

            /// <summary>
            /// Enum _94 for value: 94
            /// </summary>
            [EnumMember(Value = "94")]
            _94 = 94,

            /// <summary>
            /// Enum _95 for value: 95
            /// </summary>
            [EnumMember(Value = "95")]
            _95 = 95,

            /// <summary>
            /// Enum _96 for value: 96
            /// </summary>
            [EnumMember(Value = "96")]
            _96 = 96,

            /// <summary>
            /// Enum _97 for value: 97
            /// </summary>
            [EnumMember(Value = "97")]
            _97 = 97,

            /// <summary>
            /// Enum _98 for value: 98
            /// </summary>
            [EnumMember(Value = "98")]
            _98 = 98,

            /// <summary>
            /// Enum _99 for value: 99
            /// </summary>
            [EnumMember(Value = "99")]
            _99 = 99,

            /// <summary>
            /// Enum _100 for value: 100
            /// </summary>
            [EnumMember(Value = "100")]
            _100 = 100,

            /// <summary>
            /// Enum _101 for value: 101
            /// </summary>
            [EnumMember(Value = "101")]
            _101 = 101,

            /// <summary>
            /// Enum _102 for value: 102
            /// </summary>
            [EnumMember(Value = "102")]
            _102 = 102,

            /// <summary>
            /// Enum _103 for value: 103
            /// </summary>
            [EnumMember(Value = "103")]
            _103 = 103,

            /// <summary>
            /// Enum _104 for value: 104
            /// </summary>
            [EnumMember(Value = "104")]
            _104 = 104,

            /// <summary>
            /// Enum _105 for value: 105
            /// </summary>
            [EnumMember(Value = "105")]
            _105 = 105,

            /// <summary>
            /// Enum _106 for value: 106
            /// </summary>
            [EnumMember(Value = "106")]
            _106 = 106,

            /// <summary>
            /// Enum _107 for value: 107
            /// </summary>
            [EnumMember(Value = "107")]
            _107 = 107,

            /// <summary>
            /// Enum _108 for value: 108
            /// </summary>
            [EnumMember(Value = "108")]
            _108 = 108,

            /// <summary>
            /// Enum _109 for value: 109
            /// </summary>
            [EnumMember(Value = "109")]
            _109 = 109,

            /// <summary>
            /// Enum _110 for value: 110
            /// </summary>
            [EnumMember(Value = "110")]
            _110 = 110,

            /// <summary>
            /// Enum _111 for value: 111
            /// </summary>
            [EnumMember(Value = "111")]
            _111 = 111,

            /// <summary>
            /// Enum _112 for value: 112
            /// </summary>
            [EnumMember(Value = "112")]
            _112 = 112,

            /// <summary>
            /// Enum _113 for value: 113
            /// </summary>
            [EnumMember(Value = "113")]
            _113 = 113,

            /// <summary>
            /// Enum _114 for value: 114
            /// </summary>
            [EnumMember(Value = "114")]
            _114 = 114,

            /// <summary>
            /// Enum _115 for value: 115
            /// </summary>
            [EnumMember(Value = "115")]
            _115 = 115,

            /// <summary>
            /// Enum _116 for value: 116
            /// </summary>
            [EnumMember(Value = "116")]
            _116 = 116,

            /// <summary>
            /// Enum _117 for value: 117
            /// </summary>
            [EnumMember(Value = "117")]
            _117 = 117,

            /// <summary>
            /// Enum _118 for value: 118
            /// </summary>
            [EnumMember(Value = "118")]
            _118 = 118,

            /// <summary>
            /// Enum _119 for value: 119
            /// </summary>
            [EnumMember(Value = "119")]
            _119 = 119,

            /// <summary>
            /// Enum _120 for value: 120
            /// </summary>
            [EnumMember(Value = "120")]
            _120 = 120,

            /// <summary>
            /// Enum _121 for value: 121
            /// </summary>
            [EnumMember(Value = "121")]
            _121 = 121,

            /// <summary>
            /// Enum _122 for value: 122
            /// </summary>
            [EnumMember(Value = "122")]
            _122 = 122,

            /// <summary>
            /// Enum _123 for value: 123
            /// </summary>
            [EnumMember(Value = "123")]
            _123 = 123,

            /// <summary>
            /// Enum _124 for value: 124
            /// </summary>
            [EnumMember(Value = "124")]
            _124 = 124,

            /// <summary>
            /// Enum _125 for value: 125
            /// </summary>
            [EnumMember(Value = "125")]
            _125 = 125,

            /// <summary>
            /// Enum _126 for value: 126
            /// </summary>
            [EnumMember(Value = "126")]
            _126 = 126,

            /// <summary>
            /// Enum _127 for value: 127
            /// </summary>
            [EnumMember(Value = "127")]
            _127 = 127,

            /// <summary>
            /// Enum _128 for value: 128
            /// </summary>
            [EnumMember(Value = "128")]
            _128 = 128,

            /// <summary>
            /// Enum _129 for value: 129
            /// </summary>
            [EnumMember(Value = "129")]
            _129 = 129,

            /// <summary>
            /// Enum _130 for value: 130
            /// </summary>
            [EnumMember(Value = "130")]
            _130 = 130,

            /// <summary>
            /// Enum _131 for value: 131
            /// </summary>
            [EnumMember(Value = "131")]
            _131 = 131,

            /// <summary>
            /// Enum _132 for value: 132
            /// </summary>
            [EnumMember(Value = "132")]
            _132 = 132,

            /// <summary>
            /// Enum _133 for value: 133
            /// </summary>
            [EnumMember(Value = "133")]
            _133 = 133,

            /// <summary>
            /// Enum _134 for value: 134
            /// </summary>
            [EnumMember(Value = "134")]
            _134 = 134,

            /// <summary>
            /// Enum _135 for value: 135
            /// </summary>
            [EnumMember(Value = "135")]
            _135 = 135,

            /// <summary>
            /// Enum _136 for value: 136
            /// </summary>
            [EnumMember(Value = "136")]
            _136 = 136,

            /// <summary>
            /// Enum _137 for value: 137
            /// </summary>
            [EnumMember(Value = "137")]
            _137 = 137,

            /// <summary>
            /// Enum _138 for value: 138
            /// </summary>
            [EnumMember(Value = "138")]
            _138 = 138,

            /// <summary>
            /// Enum _139 for value: 139
            /// </summary>
            [EnumMember(Value = "139")]
            _139 = 139,

            /// <summary>
            /// Enum _140 for value: 140
            /// </summary>
            [EnumMember(Value = "140")]
            _140 = 140,

            /// <summary>
            /// Enum _141 for value: 141
            /// </summary>
            [EnumMember(Value = "141")]
            _141 = 141,

            /// <summary>
            /// Enum _142 for value: 142
            /// </summary>
            [EnumMember(Value = "142")]
            _142 = 142,

            /// <summary>
            /// Enum _143 for value: 143
            /// </summary>
            [EnumMember(Value = "143")]
            _143 = 143,

            /// <summary>
            /// Enum _144 for value: 144
            /// </summary>
            [EnumMember(Value = "144")]
            _144 = 144,

            /// <summary>
            /// Enum _145 for value: 145
            /// </summary>
            [EnumMember(Value = "145")]
            _145 = 145,

            /// <summary>
            /// Enum _146 for value: 146
            /// </summary>
            [EnumMember(Value = "146")]
            _146 = 146,

            /// <summary>
            /// Enum _147 for value: 147
            /// </summary>
            [EnumMember(Value = "147")]
            _147 = 147,

            /// <summary>
            /// Enum _148 for value: 148
            /// </summary>
            [EnumMember(Value = "148")]
            _148 = 148,

            /// <summary>
            /// Enum _149 for value: 149
            /// </summary>
            [EnumMember(Value = "149")]
            _149 = 149,

            /// <summary>
            /// Enum _150 for value: 150
            /// </summary>
            [EnumMember(Value = "150")]
            _150 = 150,

            /// <summary>
            /// Enum _151 for value: 151
            /// </summary>
            [EnumMember(Value = "151")]
            _151 = 151,

            /// <summary>
            /// Enum _152 for value: 152
            /// </summary>
            [EnumMember(Value = "152")]
            _152 = 152,

            /// <summary>
            /// Enum _153 for value: 153
            /// </summary>
            [EnumMember(Value = "153")]
            _153 = 153,

            /// <summary>
            /// Enum _154 for value: 154
            /// </summary>
            [EnumMember(Value = "154")]
            _154 = 154,

            /// <summary>
            /// Enum _155 for value: 155
            /// </summary>
            [EnumMember(Value = "155")]
            _155 = 155,

            /// <summary>
            /// Enum _156 for value: 156
            /// </summary>
            [EnumMember(Value = "156")]
            _156 = 156,

            /// <summary>
            /// Enum _157 for value: 157
            /// </summary>
            [EnumMember(Value = "157")]
            _157 = 157,

            /// <summary>
            /// Enum _158 for value: 158
            /// </summary>
            [EnumMember(Value = "158")]
            _158 = 158,

            /// <summary>
            /// Enum _159 for value: 159
            /// </summary>
            [EnumMember(Value = "159")]
            _159 = 159,

            /// <summary>
            /// Enum _160 for value: 160
            /// </summary>
            [EnumMember(Value = "160")]
            _160 = 160,

            /// <summary>
            /// Enum _161 for value: 161
            /// </summary>
            [EnumMember(Value = "161")]
            _161 = 161,

            /// <summary>
            /// Enum _162 for value: 162
            /// </summary>
            [EnumMember(Value = "162")]
            _162 = 162,

            /// <summary>
            /// Enum _163 for value: 163
            /// </summary>
            [EnumMember(Value = "163")]
            _163 = 163,

            /// <summary>
            /// Enum _164 for value: 164
            /// </summary>
            [EnumMember(Value = "164")]
            _164 = 164,

            /// <summary>
            /// Enum _165 for value: 165
            /// </summary>
            [EnumMember(Value = "165")]
            _165 = 165,

            /// <summary>
            /// Enum _166 for value: 166
            /// </summary>
            [EnumMember(Value = "166")]
            _166 = 166,

            /// <summary>
            /// Enum _167 for value: 167
            /// </summary>
            [EnumMember(Value = "167")]
            _167 = 167,

            /// <summary>
            /// Enum _168 for value: 168
            /// </summary>
            [EnumMember(Value = "168")]
            _168 = 168,

            /// <summary>
            /// Enum _169 for value: 169
            /// </summary>
            [EnumMember(Value = "169")]
            _169 = 169,

            /// <summary>
            /// Enum _170 for value: 170
            /// </summary>
            [EnumMember(Value = "170")]
            _170 = 170,

            /// <summary>
            /// Enum _171 for value: 171
            /// </summary>
            [EnumMember(Value = "171")]
            _171 = 171,

            /// <summary>
            /// Enum _172 for value: 172
            /// </summary>
            [EnumMember(Value = "172")]
            _172 = 172,

            /// <summary>
            /// Enum _173 for value: 173
            /// </summary>
            [EnumMember(Value = "173")]
            _173 = 173,

            /// <summary>
            /// Enum _174 for value: 174
            /// </summary>
            [EnumMember(Value = "174")]
            _174 = 174,

            /// <summary>
            /// Enum _175 for value: 175
            /// </summary>
            [EnumMember(Value = "175")]
            _175 = 175,

            /// <summary>
            /// Enum _176 for value: 176
            /// </summary>
            [EnumMember(Value = "176")]
            _176 = 176,

            /// <summary>
            /// Enum _177 for value: 177
            /// </summary>
            [EnumMember(Value = "177")]
            _177 = 177,

            /// <summary>
            /// Enum _178 for value: 178
            /// </summary>
            [EnumMember(Value = "178")]
            _178 = 178,

            /// <summary>
            /// Enum _179 for value: 179
            /// </summary>
            [EnumMember(Value = "179")]
            _179 = 179,

            /// <summary>
            /// Enum _180 for value: 180
            /// </summary>
            [EnumMember(Value = "180")]
            _180 = 180,

            /// <summary>
            /// Enum _181 for value: 181
            /// </summary>
            [EnumMember(Value = "181")]
            _181 = 181,

            /// <summary>
            /// Enum _182 for value: 182
            /// </summary>
            [EnumMember(Value = "182")]
            _182 = 182,

            /// <summary>
            /// Enum _183 for value: 183
            /// </summary>
            [EnumMember(Value = "183")]
            _183 = 183,

            /// <summary>
            /// Enum _184 for value: 184
            /// </summary>
            [EnumMember(Value = "184")]
            _184 = 184,

            /// <summary>
            /// Enum _185 for value: 185
            /// </summary>
            [EnumMember(Value = "185")]
            _185 = 185,

            /// <summary>
            /// Enum _186 for value: 186
            /// </summary>
            [EnumMember(Value = "186")]
            _186 = 186,

            /// <summary>
            /// Enum _187 for value: 187
            /// </summary>
            [EnumMember(Value = "187")]
            _187 = 187,

            /// <summary>
            /// Enum _188 for value: 188
            /// </summary>
            [EnumMember(Value = "188")]
            _188 = 188,

            /// <summary>
            /// Enum _189 for value: 189
            /// </summary>
            [EnumMember(Value = "189")]
            _189 = 189,

            /// <summary>
            /// Enum _190 for value: 190
            /// </summary>
            [EnumMember(Value = "190")]
            _190 = 190,

            /// <summary>
            /// Enum _191 for value: 191
            /// </summary>
            [EnumMember(Value = "191")]
            _191 = 191,

            /// <summary>
            /// Enum _192 for value: 192
            /// </summary>
            [EnumMember(Value = "192")]
            _192 = 192,

            /// <summary>
            /// Enum _193 for value: 193
            /// </summary>
            [EnumMember(Value = "193")]
            _193 = 193,

            /// <summary>
            /// Enum _194 for value: 194
            /// </summary>
            [EnumMember(Value = "194")]
            _194 = 194,

            /// <summary>
            /// Enum _195 for value: 195
            /// </summary>
            [EnumMember(Value = "195")]
            _195 = 195,

            /// <summary>
            /// Enum _196 for value: 196
            /// </summary>
            [EnumMember(Value = "196")]
            _196 = 196,

            /// <summary>
            /// Enum _197 for value: 197
            /// </summary>
            [EnumMember(Value = "197")]
            _197 = 197,

            /// <summary>
            /// Enum _198 for value: 198
            /// </summary>
            [EnumMember(Value = "198")]
            _198 = 198,

            /// <summary>
            /// Enum _199 for value: 199
            /// </summary>
            [EnumMember(Value = "199")]
            _199 = 199,

            /// <summary>
            /// Enum _200 for value: 200
            /// </summary>
            [EnumMember(Value = "200")]
            _200 = 200,

            /// <summary>
            /// Enum _201 for value: 201
            /// </summary>
            [EnumMember(Value = "201")]
            _201 = 201,

            /// <summary>
            /// Enum _202 for value: 202
            /// </summary>
            [EnumMember(Value = "202")]
            _202 = 202,

            /// <summary>
            /// Enum _203 for value: 203
            /// </summary>
            [EnumMember(Value = "203")]
            _203 = 203,

            /// <summary>
            /// Enum _204 for value: 204
            /// </summary>
            [EnumMember(Value = "204")]
            _204 = 204,

            /// <summary>
            /// Enum _205 for value: 205
            /// </summary>
            [EnumMember(Value = "205")]
            _205 = 205,

            /// <summary>
            /// Enum _206 for value: 206
            /// </summary>
            [EnumMember(Value = "206")]
            _206 = 206,

            /// <summary>
            /// Enum _207 for value: 207
            /// </summary>
            [EnumMember(Value = "207")]
            _207 = 207,

            /// <summary>
            /// Enum _208 for value: 208
            /// </summary>
            [EnumMember(Value = "208")]
            _208 = 208,

            /// <summary>
            /// Enum _209 for value: 209
            /// </summary>
            [EnumMember(Value = "209")]
            _209 = 209,

            /// <summary>
            /// Enum _210 for value: 210
            /// </summary>
            [EnumMember(Value = "210")]
            _210 = 210,

            /// <summary>
            /// Enum _211 for value: 211
            /// </summary>
            [EnumMember(Value = "211")]
            _211 = 211,

            /// <summary>
            /// Enum _212 for value: 212
            /// </summary>
            [EnumMember(Value = "212")]
            _212 = 212,

            /// <summary>
            /// Enum _213 for value: 213
            /// </summary>
            [EnumMember(Value = "213")]
            _213 = 213,

            /// <summary>
            /// Enum _214 for value: 214
            /// </summary>
            [EnumMember(Value = "214")]
            _214 = 214,

            /// <summary>
            /// Enum _215 for value: 215
            /// </summary>
            [EnumMember(Value = "215")]
            _215 = 215,

            /// <summary>
            /// Enum _216 for value: 216
            /// </summary>
            [EnumMember(Value = "216")]
            _216 = 216,

            /// <summary>
            /// Enum _217 for value: 217
            /// </summary>
            [EnumMember(Value = "217")]
            _217 = 217,

            /// <summary>
            /// Enum _218 for value: 218
            /// </summary>
            [EnumMember(Value = "218")]
            _218 = 218,

            /// <summary>
            /// Enum _219 for value: 219
            /// </summary>
            [EnumMember(Value = "219")]
            _219 = 219,

            /// <summary>
            /// Enum _220 for value: 220
            /// </summary>
            [EnumMember(Value = "220")]
            _220 = 220,

            /// <summary>
            /// Enum _221 for value: 221
            /// </summary>
            [EnumMember(Value = "221")]
            _221 = 221,

            /// <summary>
            /// Enum _222 for value: 222
            /// </summary>
            [EnumMember(Value = "222")]
            _222 = 222,

            /// <summary>
            /// Enum _223 for value: 223
            /// </summary>
            [EnumMember(Value = "223")]
            _223 = 223,

            /// <summary>
            /// Enum _224 for value: 224
            /// </summary>
            [EnumMember(Value = "224")]
            _224 = 224,

            /// <summary>
            /// Enum _225 for value: 225
            /// </summary>
            [EnumMember(Value = "225")]
            _225 = 225,

            /// <summary>
            /// Enum _226 for value: 226
            /// </summary>
            [EnumMember(Value = "226")]
            _226 = 226,

            /// <summary>
            /// Enum _227 for value: 227
            /// </summary>
            [EnumMember(Value = "227")]
            _227 = 227,

            /// <summary>
            /// Enum _228 for value: 228
            /// </summary>
            [EnumMember(Value = "228")]
            _228 = 228,

            /// <summary>
            /// Enum _229 for value: 229
            /// </summary>
            [EnumMember(Value = "229")]
            _229 = 229,

            /// <summary>
            /// Enum _230 for value: 230
            /// </summary>
            [EnumMember(Value = "230")]
            _230 = 230,

            /// <summary>
            /// Enum _231 for value: 231
            /// </summary>
            [EnumMember(Value = "231")]
            _231 = 231,

            /// <summary>
            /// Enum _232 for value: 232
            /// </summary>
            [EnumMember(Value = "232")]
            _232 = 232,

            /// <summary>
            /// Enum _233 for value: 233
            /// </summary>
            [EnumMember(Value = "233")]
            _233 = 233,

            /// <summary>
            /// Enum _234 for value: 234
            /// </summary>
            [EnumMember(Value = "234")]
            _234 = 234,

            /// <summary>
            /// Enum _235 for value: 235
            /// </summary>
            [EnumMember(Value = "235")]
            _235 = 235,

            /// <summary>
            /// Enum _236 for value: 236
            /// </summary>
            [EnumMember(Value = "236")]
            _236 = 236,

            /// <summary>
            /// Enum _237 for value: 237
            /// </summary>
            [EnumMember(Value = "237")]
            _237 = 237,

            /// <summary>
            /// Enum _238 for value: 238
            /// </summary>
            [EnumMember(Value = "238")]
            _238 = 238,

            /// <summary>
            /// Enum _239 for value: 239
            /// </summary>
            [EnumMember(Value = "239")]
            _239 = 239,

            /// <summary>
            /// Enum _240 for value: 240
            /// </summary>
            [EnumMember(Value = "240")]
            _240 = 240,

            /// <summary>
            /// Enum _241 for value: 241
            /// </summary>
            [EnumMember(Value = "241")]
            _241 = 241,

            /// <summary>
            /// Enum _242 for value: 242
            /// </summary>
            [EnumMember(Value = "242")]
            _242 = 242,

            /// <summary>
            /// Enum _243 for value: 243
            /// </summary>
            [EnumMember(Value = "243")]
            _243 = 243,

            /// <summary>
            /// Enum _244 for value: 244
            /// </summary>
            [EnumMember(Value = "244")]
            _244 = 244,

            /// <summary>
            /// Enum _245 for value: 245
            /// </summary>
            [EnumMember(Value = "245")]
            _245 = 245,

            /// <summary>
            /// Enum _246 for value: 246
            /// </summary>
            [EnumMember(Value = "246")]
            _246 = 246,

            /// <summary>
            /// Enum _247 for value: 247
            /// </summary>
            [EnumMember(Value = "247")]
            _247 = 247,

            /// <summary>
            /// Enum _248 for value: 248
            /// </summary>
            [EnumMember(Value = "248")]
            _248 = 248,

            /// <summary>
            /// Enum _249 for value: 249
            /// </summary>
            [EnumMember(Value = "249")]
            _249 = 249,

            /// <summary>
            /// Enum _250 for value: 250
            /// </summary>
            [EnumMember(Value = "250")]
            _250 = 250,

            /// <summary>
            /// Enum _251 for value: 251
            /// </summary>
            [EnumMember(Value = "251")]
            _251 = 251,

            /// <summary>
            /// Enum _252 for value: 252
            /// </summary>
            [EnumMember(Value = "252")]
            _252 = 252,

            /// <summary>
            /// Enum _253 for value: 253
            /// </summary>
            [EnumMember(Value = "253")]
            _253 = 253,

            /// <summary>
            /// Enum _254 for value: 254
            /// </summary>
            [EnumMember(Value = "254")]
            _254 = 254,

            /// <summary>
            /// Enum _255 for value: 255
            /// </summary>
            [EnumMember(Value = "255")]
            _255 = 255,

            /// <summary>
            /// Enum _256 for value: 256
            /// </summary>
            [EnumMember(Value = "256")]
            _256 = 256,

            /// <summary>
            /// Enum _257 for value: 257
            /// </summary>
            [EnumMember(Value = "257")]
            _257 = 257,

            /// <summary>
            /// Enum _258 for value: 258
            /// </summary>
            [EnumMember(Value = "258")]
            _258 = 258,

            /// <summary>
            /// Enum _259 for value: 259
            /// </summary>
            [EnumMember(Value = "259")]
            _259 = 259,

            /// <summary>
            /// Enum _260 for value: 260
            /// </summary>
            [EnumMember(Value = "260")]
            _260 = 260,

            /// <summary>
            /// Enum _261 for value: 261
            /// </summary>
            [EnumMember(Value = "261")]
            _261 = 261,

            /// <summary>
            /// Enum _262 for value: 262
            /// </summary>
            [EnumMember(Value = "262")]
            _262 = 262,

            /// <summary>
            /// Enum _263 for value: 263
            /// </summary>
            [EnumMember(Value = "263")]
            _263 = 263,

            /// <summary>
            /// Enum _264 for value: 264
            /// </summary>
            [EnumMember(Value = "264")]
            _264 = 264,

            /// <summary>
            /// Enum _265 for value: 265
            /// </summary>
            [EnumMember(Value = "265")]
            _265 = 265,

            /// <summary>
            /// Enum _266 for value: 266
            /// </summary>
            [EnumMember(Value = "266")]
            _266 = 266,

            /// <summary>
            /// Enum _267 for value: 267
            /// </summary>
            [EnumMember(Value = "267")]
            _267 = 267,

            /// <summary>
            /// Enum _268 for value: 268
            /// </summary>
            [EnumMember(Value = "268")]
            _268 = 268,

            /// <summary>
            /// Enum _269 for value: 269
            /// </summary>
            [EnumMember(Value = "269")]
            _269 = 269,

            /// <summary>
            /// Enum _270 for value: 270
            /// </summary>
            [EnumMember(Value = "270")]
            _270 = 270,

            /// <summary>
            /// Enum _271 for value: 271
            /// </summary>
            [EnumMember(Value = "271")]
            _271 = 271,

            /// <summary>
            /// Enum _272 for value: 272
            /// </summary>
            [EnumMember(Value = "272")]
            _272 = 272,

            /// <summary>
            /// Enum _273 for value: 273
            /// </summary>
            [EnumMember(Value = "273")]
            _273 = 273,

            /// <summary>
            /// Enum _274 for value: 274
            /// </summary>
            [EnumMember(Value = "274")]
            _274 = 274,

            /// <summary>
            /// Enum _275 for value: 275
            /// </summary>
            [EnumMember(Value = "275")]
            _275 = 275,

            /// <summary>
            /// Enum _276 for value: 276
            /// </summary>
            [EnumMember(Value = "276")]
            _276 = 276,

            /// <summary>
            /// Enum _277 for value: 277
            /// </summary>
            [EnumMember(Value = "277")]
            _277 = 277,

            /// <summary>
            /// Enum _278 for value: 278
            /// </summary>
            [EnumMember(Value = "278")]
            _278 = 278,

            /// <summary>
            /// Enum _279 for value: 279
            /// </summary>
            [EnumMember(Value = "279")]
            _279 = 279,

            /// <summary>
            /// Enum _280 for value: 280
            /// </summary>
            [EnumMember(Value = "280")]
            _280 = 280,

            /// <summary>
            /// Enum _281 for value: 281
            /// </summary>
            [EnumMember(Value = "281")]
            _281 = 281,

            /// <summary>
            /// Enum _282 for value: 282
            /// </summary>
            [EnumMember(Value = "282")]
            _282 = 282,

            /// <summary>
            /// Enum _283 for value: 283
            /// </summary>
            [EnumMember(Value = "283")]
            _283 = 283,

            /// <summary>
            /// Enum _284 for value: 284
            /// </summary>
            [EnumMember(Value = "284")]
            _284 = 284,

            /// <summary>
            /// Enum _285 for value: 285
            /// </summary>
            [EnumMember(Value = "285")]
            _285 = 285,

            /// <summary>
            /// Enum _286 for value: 286
            /// </summary>
            [EnumMember(Value = "286")]
            _286 = 286,

            /// <summary>
            /// Enum _287 for value: 287
            /// </summary>
            [EnumMember(Value = "287")]
            _287 = 287,

            /// <summary>
            /// Enum _288 for value: 288
            /// </summary>
            [EnumMember(Value = "288")]
            _288 = 288,

            /// <summary>
            /// Enum _289 for value: 289
            /// </summary>
            [EnumMember(Value = "289")]
            _289 = 289,

            /// <summary>
            /// Enum _290 for value: 290
            /// </summary>
            [EnumMember(Value = "290")]
            _290 = 290,

            /// <summary>
            /// Enum _291 for value: 291
            /// </summary>
            [EnumMember(Value = "291")]
            _291 = 291,

            /// <summary>
            /// Enum _292 for value: 292
            /// </summary>
            [EnumMember(Value = "292")]
            _292 = 292,

            /// <summary>
            /// Enum _293 for value: 293
            /// </summary>
            [EnumMember(Value = "293")]
            _293 = 293,

            /// <summary>
            /// Enum _294 for value: 294
            /// </summary>
            [EnumMember(Value = "294")]
            _294 = 294,

            /// <summary>
            /// Enum _295 for value: 295
            /// </summary>
            [EnumMember(Value = "295")]
            _295 = 295,

            /// <summary>
            /// Enum _296 for value: 296
            /// </summary>
            [EnumMember(Value = "296")]
            _296 = 296,

            /// <summary>
            /// Enum _297 for value: 297
            /// </summary>
            [EnumMember(Value = "297")]
            _297 = 297,

            /// <summary>
            /// Enum _298 for value: 298
            /// </summary>
            [EnumMember(Value = "298")]
            _298 = 298,

            /// <summary>
            /// Enum _299 for value: 299
            /// </summary>
            [EnumMember(Value = "299")]
            _299 = 299,

            /// <summary>
            /// Enum _300 for value: 300
            /// </summary>
            [EnumMember(Value = "300")]
            _300 = 300,

            /// <summary>
            /// Enum _301 for value: 301
            /// </summary>
            [EnumMember(Value = "301")]
            _301 = 301,

            /// <summary>
            /// Enum _302 for value: 302
            /// </summary>
            [EnumMember(Value = "302")]
            _302 = 302,

            /// <summary>
            /// Enum _303 for value: 303
            /// </summary>
            [EnumMember(Value = "303")]
            _303 = 303,

            /// <summary>
            /// Enum _304 for value: 304
            /// </summary>
            [EnumMember(Value = "304")]
            _304 = 304,

            /// <summary>
            /// Enum _305 for value: 305
            /// </summary>
            [EnumMember(Value = "305")]
            _305 = 305,

            /// <summary>
            /// Enum _306 for value: 306
            /// </summary>
            [EnumMember(Value = "306")]
            _306 = 306,

            /// <summary>
            /// Enum _307 for value: 307
            /// </summary>
            [EnumMember(Value = "307")]
            _307 = 307,

            /// <summary>
            /// Enum _308 for value: 308
            /// </summary>
            [EnumMember(Value = "308")]
            _308 = 308,

            /// <summary>
            /// Enum _309 for value: 309
            /// </summary>
            [EnumMember(Value = "309")]
            _309 = 309,

            /// <summary>
            /// Enum _310 for value: 310
            /// </summary>
            [EnumMember(Value = "310")]
            _310 = 310,

            /// <summary>
            /// Enum _311 for value: 311
            /// </summary>
            [EnumMember(Value = "311")]
            _311 = 311,

            /// <summary>
            /// Enum _312 for value: 312
            /// </summary>
            [EnumMember(Value = "312")]
            _312 = 312,

            /// <summary>
            /// Enum _313 for value: 313
            /// </summary>
            [EnumMember(Value = "313")]
            _313 = 313,

            /// <summary>
            /// Enum _314 for value: 314
            /// </summary>
            [EnumMember(Value = "314")]
            _314 = 314,

            /// <summary>
            /// Enum _315 for value: 315
            /// </summary>
            [EnumMember(Value = "315")]
            _315 = 315,

            /// <summary>
            /// Enum _316 for value: 316
            /// </summary>
            [EnumMember(Value = "316")]
            _316 = 316,

            /// <summary>
            /// Enum _317 for value: 317
            /// </summary>
            [EnumMember(Value = "317")]
            _317 = 317,

            /// <summary>
            /// Enum _318 for value: 318
            /// </summary>
            [EnumMember(Value = "318")]
            _318 = 318,

            /// <summary>
            /// Enum _319 for value: 319
            /// </summary>
            [EnumMember(Value = "319")]
            _319 = 319,

            /// <summary>
            /// Enum _320 for value: 320
            /// </summary>
            [EnumMember(Value = "320")]
            _320 = 320,

            /// <summary>
            /// Enum _321 for value: 321
            /// </summary>
            [EnumMember(Value = "321")]
            _321 = 321,

            /// <summary>
            /// Enum _322 for value: 322
            /// </summary>
            [EnumMember(Value = "322")]
            _322 = 322,

            /// <summary>
            /// Enum _323 for value: 323
            /// </summary>
            [EnumMember(Value = "323")]
            _323 = 323,

            /// <summary>
            /// Enum _324 for value: 324
            /// </summary>
            [EnumMember(Value = "324")]
            _324 = 324,

            /// <summary>
            /// Enum _325 for value: 325
            /// </summary>
            [EnumMember(Value = "325")]
            _325 = 325,

            /// <summary>
            /// Enum _326 for value: 326
            /// </summary>
            [EnumMember(Value = "326")]
            _326 = 326,

            /// <summary>
            /// Enum _327 for value: 327
            /// </summary>
            [EnumMember(Value = "327")]
            _327 = 327,

            /// <summary>
            /// Enum _328 for value: 328
            /// </summary>
            [EnumMember(Value = "328")]
            _328 = 328,

            /// <summary>
            /// Enum _329 for value: 329
            /// </summary>
            [EnumMember(Value = "329")]
            _329 = 329,

            /// <summary>
            /// Enum _331 for value: 331
            /// </summary>
            [EnumMember(Value = "331")]
            _331 = 330,

            /// <summary>
            /// Enum _332 for value: 332
            /// </summary>
            [EnumMember(Value = "332")]
            _332 = 331,

            /// <summary>
            /// Enum _333 for value: 333
            /// </summary>
            [EnumMember(Value = "333")]
            _333 = 332,

            /// <summary>
            /// Enum _334 for value: 334
            /// </summary>
            [EnumMember(Value = "334")]
            _334 = 333,

            /// <summary>
            /// Enum _335 for value: 335
            /// </summary>
            [EnumMember(Value = "335")]
            _335 = 334,

            /// <summary>
            /// Enum _336 for value: 336
            /// </summary>
            [EnumMember(Value = "336")]
            _336 = 335,

            /// <summary>
            /// Enum _337 for value: 337
            /// </summary>
            [EnumMember(Value = "337")]
            _337 = 336,

            /// <summary>
            /// Enum _338 for value: 338
            /// </summary>
            [EnumMember(Value = "338")]
            _338 = 337,

            /// <summary>
            /// Enum _339 for value: 339
            /// </summary>
            [EnumMember(Value = "339")]
            _339 = 338,

            /// <summary>
            /// Enum _340 for value: 340
            /// </summary>
            [EnumMember(Value = "340")]
            _340 = 339,

            /// <summary>
            /// Enum _341 for value: 341
            /// </summary>
            [EnumMember(Value = "341")]
            _341 = 340,

            /// <summary>
            /// Enum _342 for value: 342
            /// </summary>
            [EnumMember(Value = "342")]
            _342 = 341,

            /// <summary>
            /// Enum _343 for value: 343
            /// </summary>
            [EnumMember(Value = "343")]
            _343 = 342,

            /// <summary>
            /// Enum _344 for value: 344
            /// </summary>
            [EnumMember(Value = "344")]
            _344 = 343,

            /// <summary>
            /// Enum _345 for value: 345
            /// </summary>
            [EnumMember(Value = "345")]
            _345 = 344,

            /// <summary>
            /// Enum _348 for value: 348
            /// </summary>
            [EnumMember(Value = "348")]
            _348 = 345,

            /// <summary>
            /// Enum _349 for value: 349
            /// </summary>
            [EnumMember(Value = "349")]
            _349 = 346,

            /// <summary>
            /// Enum _350 for value: 350
            /// </summary>
            [EnumMember(Value = "350")]
            _350 = 347,

            /// <summary>
            /// Enum _351 for value: 351
            /// </summary>
            [EnumMember(Value = "351")]
            _351 = 348,

            /// <summary>
            /// Enum _5000 for value: 5000
            /// </summary>
            [EnumMember(Value = "5000")]
            _5000 = 349,

            /// <summary>
            /// Enum _5001 for value: 5001
            /// </summary>
            [EnumMember(Value = "5001")]
            _5001 = 350,

            /// <summary>
            /// Enum _5002 for value: 5002
            /// </summary>
            [EnumMember(Value = "5002")]
            _5002 = 351,

            /// <summary>
            /// Enum _5003 for value: 5003
            /// </summary>
            [EnumMember(Value = "5003")]
            _5003 = 352,

            /// <summary>
            /// Enum _5004 for value: 5004
            /// </summary>
            [EnumMember(Value = "5004")]
            _5004 = 353,

            /// <summary>
            /// Enum _5005 for value: 5005
            /// </summary>
            [EnumMember(Value = "5005")]
            _5005 = 354,

            /// <summary>
            /// Enum _5006 for value: 5006
            /// </summary>
            [EnumMember(Value = "5006")]
            _5006 = 355,

            /// <summary>
            /// Enum _5007 for value: 5007
            /// </summary>
            [EnumMember(Value = "5007")]
            _5007 = 356,

            /// <summary>
            /// Enum _5008 for value: 5008
            /// </summary>
            [EnumMember(Value = "5008")]
            _5008 = 357,

            /// <summary>
            /// Enum _5009 for value: 5009
            /// </summary>
            [EnumMember(Value = "5009")]
            _5009 = 358,

            /// <summary>
            /// Enum _5010 for value: 5010
            /// </summary>
            [EnumMember(Value = "5010")]
            _5010 = 359,

            /// <summary>
            /// Enum _5011 for value: 5011
            /// </summary>
            [EnumMember(Value = "5011")]
            _5011 = 360,

            /// <summary>
            /// Enum _5012 for value: 5012
            /// </summary>
            [EnumMember(Value = "5012")]
            _5012 = 361,

            /// <summary>
            /// Enum _5013 for value: 5013
            /// </summary>
            [EnumMember(Value = "5013")]
            _5013 = 362,

            /// <summary>
            /// Enum _5014 for value: 5014
            /// </summary>
            [EnumMember(Value = "5014")]
            _5014 = 363,

            /// <summary>
            /// Enum _5015 for value: 5015
            /// </summary>
            [EnumMember(Value = "5015")]
            _5015 = 364,

            /// <summary>
            /// Enum _5016 for value: 5016
            /// </summary>
            [EnumMember(Value = "5016")]
            _5016 = 365,

            /// <summary>
            /// Enum _5017 for value: 5017
            /// </summary>
            [EnumMember(Value = "5017")]
            _5017 = 366,

            /// <summary>
            /// Enum _5018 for value: 5018
            /// </summary>
            [EnumMember(Value = "5018")]
            _5018 = 367,

            /// <summary>
            /// Enum _5020 for value: 5020
            /// </summary>
            [EnumMember(Value = "5020")]
            _5020 = 368,

            /// <summary>
            /// Enum _5021 for value: 5021
            /// </summary>
            [EnumMember(Value = "5021")]
            _5021 = 369,

            /// <summary>
            /// Enum _5022 for value: 5022
            /// </summary>
            [EnumMember(Value = "5022")]
            _5022 = 370,

            /// <summary>
            /// Enum _5023 for value: 5023
            /// </summary>
            [EnumMember(Value = "5023")]
            _5023 = 371,

            /// <summary>
            /// Enum _5024 for value: 5024
            /// </summary>
            [EnumMember(Value = "5024")]
            _5024 = 372,

            /// <summary>
            /// Enum _5025 for value: 5025
            /// </summary>
            [EnumMember(Value = "5025")]
            _5025 = 373,

            /// <summary>
            /// Enum _5026 for value: 5026
            /// </summary>
            [EnumMember(Value = "5026")]
            _5026 = 374,

            /// <summary>
            /// Enum _5027 for value: 5027
            /// </summary>
            [EnumMember(Value = "5027")]
            _5027 = 375,

            /// <summary>
            /// Enum _5028 for value: 5028
            /// </summary>
            [EnumMember(Value = "5028")]
            _5028 = 376,

            /// <summary>
            /// Enum _5029 for value: 5029
            /// </summary>
            [EnumMember(Value = "5029")]
            _5029 = 377,

            /// <summary>
            /// Enum _5030 for value: 5030
            /// </summary>
            [EnumMember(Value = "5030")]
            _5030 = 378,

            /// <summary>
            /// Enum _5031 for value: 5031
            /// </summary>
            [EnumMember(Value = "5031")]
            _5031 = 379,

            /// <summary>
            /// Enum _5032 for value: 5032
            /// </summary>
            [EnumMember(Value = "5032")]
            _5032 = 380,

            /// <summary>
            /// Enum _5033 for value: 5033
            /// </summary>
            [EnumMember(Value = "5033")]
            _5033 = 381,

            /// <summary>
            /// Enum _5034 for value: 5034
            /// </summary>
            [EnumMember(Value = "5034")]
            _5034 = 382,

            /// <summary>
            /// Enum _5035 for value: 5035
            /// </summary>
            [EnumMember(Value = "5035")]
            _5035 = 383,

            /// <summary>
            /// Enum _5036 for value: 5036
            /// </summary>
            [EnumMember(Value = "5036")]
            _5036 = 384,

            /// <summary>
            /// Enum _5037 for value: 5037
            /// </summary>
            [EnumMember(Value = "5037")]
            _5037 = 385,

            /// <summary>
            /// Enum _5039 for value: 5039
            /// </summary>
            [EnumMember(Value = "5039")]
            _5039 = 386,

            /// <summary>
            /// Enum _5040 for value: 5040
            /// </summary>
            [EnumMember(Value = "5040")]
            _5040 = 387,

            /// <summary>
            /// Enum _5041 for value: 5041
            /// </summary>
            [EnumMember(Value = "5041")]
            _5041 = 388,

            /// <summary>
            /// Enum _5042 for value: 5042
            /// </summary>
            [EnumMember(Value = "5042")]
            _5042 = 389,

            /// <summary>
            /// Enum _5043 for value: 5043
            /// </summary>
            [EnumMember(Value = "5043")]
            _5043 = 390,

            /// <summary>
            /// Enum _5044 for value: 5044
            /// </summary>
            [EnumMember(Value = "5044")]
            _5044 = 391,

            /// <summary>
            /// Enum _5045 for value: 5045
            /// </summary>
            [EnumMember(Value = "5045")]
            _5045 = 392,

            /// <summary>
            /// Enum _5046 for value: 5046
            /// </summary>
            [EnumMember(Value = "5046")]
            _5046 = 393,

            /// <summary>
            /// Enum _5047 for value: 5047
            /// </summary>
            [EnumMember(Value = "5047")]
            _5047 = 394,

            /// <summary>
            /// Enum _5048 for value: 5048
            /// </summary>
            [EnumMember(Value = "5048")]
            _5048 = 395,

            /// <summary>
            /// Enum _5049 for value: 5049
            /// </summary>
            [EnumMember(Value = "5049")]
            _5049 = 396,

            /// <summary>
            /// Enum _5050 for value: 5050
            /// </summary>
            [EnumMember(Value = "5050")]
            _5050 = 397,

            /// <summary>
            /// Enum _5051 for value: 5051
            /// </summary>
            [EnumMember(Value = "5051")]
            _5051 = 398,

            /// <summary>
            /// Enum _5052 for value: 5052
            /// </summary>
            [EnumMember(Value = "5052")]
            _5052 = 399,

            /// <summary>
            /// Enum _5053 for value: 5053
            /// </summary>
            [EnumMember(Value = "5053")]
            _5053 = 400,

            /// <summary>
            /// Enum _5054 for value: 5054
            /// </summary>
            [EnumMember(Value = "5054")]
            _5054 = 401,

            /// <summary>
            /// Enum _5055 for value: 5055
            /// </summary>
            [EnumMember(Value = "5055")]
            _5055 = 402,

            /// <summary>
            /// Enum _5056 for value: 5056
            /// </summary>
            [EnumMember(Value = "5056")]
            _5056 = 403,

            /// <summary>
            /// Enum _5057 for value: 5057
            /// </summary>
            [EnumMember(Value = "5057")]
            _5057 = 404,

            /// <summary>
            /// Enum _5058 for value: 5058
            /// </summary>
            [EnumMember(Value = "5058")]
            _5058 = 405,

            /// <summary>
            /// Enum _5059 for value: 5059
            /// </summary>
            [EnumMember(Value = "5059")]
            _5059 = 406,

            /// <summary>
            /// Enum _5060 for value: 5060
            /// </summary>
            [EnumMember(Value = "5060")]
            _5060 = 407,

            /// <summary>
            /// Enum _5061 for value: 5061
            /// </summary>
            [EnumMember(Value = "5061")]
            _5061 = 408,

            /// <summary>
            /// Enum _5062 for value: 5062
            /// </summary>
            [EnumMember(Value = "5062")]
            _5062 = 409,

            /// <summary>
            /// Enum _5063 for value: 5063
            /// </summary>
            [EnumMember(Value = "5063")]
            _5063 = 410,

            /// <summary>
            /// Enum _5064 for value: 5064
            /// </summary>
            [EnumMember(Value = "5064")]
            _5064 = 411,

            /// <summary>
            /// Enum _5065 for value: 5065
            /// </summary>
            [EnumMember(Value = "5065")]
            _5065 = 412,

            /// <summary>
            /// Enum _5066 for value: 5066
            /// </summary>
            [EnumMember(Value = "5066")]
            _5066 = 413,

            /// <summary>
            /// Enum _5067 for value: 5067
            /// </summary>
            [EnumMember(Value = "5067")]
            _5067 = 414,

            /// <summary>
            /// Enum _5068 for value: 5068
            /// </summary>
            [EnumMember(Value = "5068")]
            _5068 = 415,

            /// <summary>
            /// Enum _5069 for value: 5069
            /// </summary>
            [EnumMember(Value = "5069")]
            _5069 = 416,

            /// <summary>
            /// Enum _5070 for value: 5070
            /// </summary>
            [EnumMember(Value = "5070")]
            _5070 = 417,

            /// <summary>
            /// Enum _5071 for value: 5071
            /// </summary>
            [EnumMember(Value = "5071")]
            _5071 = 418,

            /// <summary>
            /// Enum _5072 for value: 5072
            /// </summary>
            [EnumMember(Value = "5072")]
            _5072 = 419,

            /// <summary>
            /// Enum _5073 for value: 5073
            /// </summary>
            [EnumMember(Value = "5073")]
            _5073 = 420,

            /// <summary>
            /// Enum _5074 for value: 5074
            /// </summary>
            [EnumMember(Value = "5074")]
            _5074 = 421,

            /// <summary>
            /// Enum _5075 for value: 5075
            /// </summary>
            [EnumMember(Value = "5075")]
            _5075 = 422,

            /// <summary>
            /// Enum _5076 for value: 5076
            /// </summary>
            [EnumMember(Value = "5076")]
            _5076 = 423,

            /// <summary>
            /// Enum _5077 for value: 5077
            /// </summary>
            [EnumMember(Value = "5077")]
            _5077 = 424,

            /// <summary>
            /// Enum _5078 for value: 5078
            /// </summary>
            [EnumMember(Value = "5078")]
            _5078 = 425,

            /// <summary>
            /// Enum _5079 for value: 5079
            /// </summary>
            [EnumMember(Value = "5079")]
            _5079 = 426,

            /// <summary>
            /// Enum _5080 for value: 5080
            /// </summary>
            [EnumMember(Value = "5080")]
            _5080 = 427,

            /// <summary>
            /// Enum _5081 for value: 5081
            /// </summary>
            [EnumMember(Value = "5081")]
            _5081 = 428,

            /// <summary>
            /// Enum _5082 for value: 5082
            /// </summary>
            [EnumMember(Value = "5082")]
            _5082 = 429,

            /// <summary>
            /// Enum _5083 for value: 5083
            /// </summary>
            [EnumMember(Value = "5083")]
            _5083 = 430,

            /// <summary>
            /// Enum _5084 for value: 5084
            /// </summary>
            [EnumMember(Value = "5084")]
            _5084 = 431,

            /// <summary>
            /// Enum _5085 for value: 5085
            /// </summary>
            [EnumMember(Value = "5085")]
            _5085 = 432,

            /// <summary>
            /// Enum _5086 for value: 5086
            /// </summary>
            [EnumMember(Value = "5086")]
            _5086 = 433,

            /// <summary>
            /// Enum _5087 for value: 5087
            /// </summary>
            [EnumMember(Value = "5087")]
            _5087 = 434,

            /// <summary>
            /// Enum _5088 for value: 5088
            /// </summary>
            [EnumMember(Value = "5088")]
            _5088 = 435,

            /// <summary>
            /// Enum _5089 for value: 5089
            /// </summary>
            [EnumMember(Value = "5089")]
            _5089 = 436,

            /// <summary>
            /// Enum _5090 for value: 5090
            /// </summary>
            [EnumMember(Value = "5090")]
            _5090 = 437,

            /// <summary>
            /// Enum _5091 for value: 5091
            /// </summary>
            [EnumMember(Value = "5091")]
            _5091 = 438,

            /// <summary>
            /// Enum _5092 for value: 5092
            /// </summary>
            [EnumMember(Value = "5092")]
            _5092 = 439,

            /// <summary>
            /// Enum _5093 for value: 5093
            /// </summary>
            [EnumMember(Value = "5093")]
            _5093 = 440,

            /// <summary>
            /// Enum _5094 for value: 5094
            /// </summary>
            [EnumMember(Value = "5094")]
            _5094 = 441,

            /// <summary>
            /// Enum _5095 for value: 5095
            /// </summary>
            [EnumMember(Value = "5095")]
            _5095 = 442,

            /// <summary>
            /// Enum _5096 for value: 5096
            /// </summary>
            [EnumMember(Value = "5096")]
            _5096 = 443,

            /// <summary>
            /// Enum _5097 for value: 5097
            /// </summary>
            [EnumMember(Value = "5097")]
            _5097 = 444,

            /// <summary>
            /// Enum _5098 for value: 5098
            /// </summary>
            [EnumMember(Value = "5098")]
            _5098 = 445,

            /// <summary>
            /// Enum _5099 for value: 5099
            /// </summary>
            [EnumMember(Value = "5099")]
            _5099 = 446,

            /// <summary>
            /// Enum _5100 for value: 5100
            /// </summary>
            [EnumMember(Value = "5100")]
            _5100 = 447,

            /// <summary>
            /// Enum _5101 for value: 5101
            /// </summary>
            [EnumMember(Value = "5101")]
            _5101 = 448,

            /// <summary>
            /// Enum _5102 for value: 5102
            /// </summary>
            [EnumMember(Value = "5102")]
            _5102 = 449,

            /// <summary>
            /// Enum _5103 for value: 5103
            /// </summary>
            [EnumMember(Value = "5103")]
            _5103 = 450,

            /// <summary>
            /// Enum _5104 for value: 5104
            /// </summary>
            [EnumMember(Value = "5104")]
            _5104 = 451,

            /// <summary>
            /// Enum _5105 for value: 5105
            /// </summary>
            [EnumMember(Value = "5105")]
            _5105 = 452,

            /// <summary>
            /// Enum _5106 for value: 5106
            /// </summary>
            [EnumMember(Value = "5106")]
            _5106 = 453,

            /// <summary>
            /// Enum _5107 for value: 5107
            /// </summary>
            [EnumMember(Value = "5107")]
            _5107 = 454,

            /// <summary>
            /// Enum _5108 for value: 5108
            /// </summary>
            [EnumMember(Value = "5108")]
            _5108 = 455,

            /// <summary>
            /// Enum _5109 for value: 5109
            /// </summary>
            [EnumMember(Value = "5109")]
            _5109 = 456,

            /// <summary>
            /// Enum _5110 for value: 5110
            /// </summary>
            [EnumMember(Value = "5110")]
            _5110 = 457,

            /// <summary>
            /// Enum _5111 for value: 5111
            /// </summary>
            [EnumMember(Value = "5111")]
            _5111 = 458,

            /// <summary>
            /// Enum _5112 for value: 5112
            /// </summary>
            [EnumMember(Value = "5112")]
            _5112 = 459,

            /// <summary>
            /// Enum _5113 for value: 5113
            /// </summary>
            [EnumMember(Value = "5113")]
            _5113 = 460,

            /// <summary>
            /// Enum _5114 for value: 5114
            /// </summary>
            [EnumMember(Value = "5114")]
            _5114 = 461,

            /// <summary>
            /// Enum _5115 for value: 5115
            /// </summary>
            [EnumMember(Value = "5115")]
            _5115 = 462,

            /// <summary>
            /// Enum _5116 for value: 5116
            /// </summary>
            [EnumMember(Value = "5116")]
            _5116 = 463,

            /// <summary>
            /// Enum _5117 for value: 5117
            /// </summary>
            [EnumMember(Value = "5117")]
            _5117 = 464,

            /// <summary>
            /// Enum _5118 for value: 5118
            /// </summary>
            [EnumMember(Value = "5118")]
            _5118 = 465,

            /// <summary>
            /// Enum _5119 for value: 5119
            /// </summary>
            [EnumMember(Value = "5119")]
            _5119 = 466,

            /// <summary>
            /// Enum _5120 for value: 5120
            /// </summary>
            [EnumMember(Value = "5120")]
            _5120 = 467,

            /// <summary>
            /// Enum _5121 for value: 5121
            /// </summary>
            [EnumMember(Value = "5121")]
            _5121 = 468,

            /// <summary>
            /// Enum _5122 for value: 5122
            /// </summary>
            [EnumMember(Value = "5122")]
            _5122 = 469,

            /// <summary>
            /// Enum _5123 for value: 5123
            /// </summary>
            [EnumMember(Value = "5123")]
            _5123 = 470,

            /// <summary>
            /// Enum _5124 for value: 5124
            /// </summary>
            [EnumMember(Value = "5124")]
            _5124 = 471,

            /// <summary>
            /// Enum _5125 for value: 5125
            /// </summary>
            [EnumMember(Value = "5125")]
            _5125 = 472,

            /// <summary>
            /// Enum _5126 for value: 5126
            /// </summary>
            [EnumMember(Value = "5126")]
            _5126 = 473,

            /// <summary>
            /// Enum _5127 for value: 5127
            /// </summary>
            [EnumMember(Value = "5127")]
            _5127 = 474,

            /// <summary>
            /// Enum _5128 for value: 5128
            /// </summary>
            [EnumMember(Value = "5128")]
            _5128 = 475,

            /// <summary>
            /// Enum _5129 for value: 5129
            /// </summary>
            [EnumMember(Value = "5129")]
            _5129 = 476,

            /// <summary>
            /// Enum _5130 for value: 5130
            /// </summary>
            [EnumMember(Value = "5130")]
            _5130 = 477,

            /// <summary>
            /// Enum _5131 for value: 5131
            /// </summary>
            [EnumMember(Value = "5131")]
            _5131 = 478,

            /// <summary>
            /// Enum _5132 for value: 5132
            /// </summary>
            [EnumMember(Value = "5132")]
            _5132 = 479,

            /// <summary>
            /// Enum _5133 for value: 5133
            /// </summary>
            [EnumMember(Value = "5133")]
            _5133 = 480,

            /// <summary>
            /// Enum _5134 for value: 5134
            /// </summary>
            [EnumMember(Value = "5134")]
            _5134 = 481,

            /// <summary>
            /// Enum _5135 for value: 5135
            /// </summary>
            [EnumMember(Value = "5135")]
            _5135 = 482,

            /// <summary>
            /// Enum _5136 for value: 5136
            /// </summary>
            [EnumMember(Value = "5136")]
            _5136 = 483,

            /// <summary>
            /// Enum _5137 for value: 5137
            /// </summary>
            [EnumMember(Value = "5137")]
            _5137 = 484,

            /// <summary>
            /// Enum _5138 for value: 5138
            /// </summary>
            [EnumMember(Value = "5138")]
            _5138 = 485,

            /// <summary>
            /// Enum _5139 for value: 5139
            /// </summary>
            [EnumMember(Value = "5139")]
            _5139 = 486,

            /// <summary>
            /// Enum _5140 for value: 5140
            /// </summary>
            [EnumMember(Value = "5140")]
            _5140 = 487,

            /// <summary>
            /// Enum _5141 for value: 5141
            /// </summary>
            [EnumMember(Value = "5141")]
            _5141 = 488,

            /// <summary>
            /// Enum _5142 for value: 5142
            /// </summary>
            [EnumMember(Value = "5142")]
            _5142 = 489,

            /// <summary>
            /// Enum _5143 for value: 5143
            /// </summary>
            [EnumMember(Value = "5143")]
            _5143 = 490,

            /// <summary>
            /// Enum _5144 for value: 5144
            /// </summary>
            [EnumMember(Value = "5144")]
            _5144 = 491,

            /// <summary>
            /// Enum _5145 for value: 5145
            /// </summary>
            [EnumMember(Value = "5145")]
            _5145 = 492,

            /// <summary>
            /// Enum _5146 for value: 5146
            /// </summary>
            [EnumMember(Value = "5146")]
            _5146 = 493,

            /// <summary>
            /// Enum _5147 for value: 5147
            /// </summary>
            [EnumMember(Value = "5147")]
            _5147 = 494,

            /// <summary>
            /// Enum _5148 for value: 5148
            /// </summary>
            [EnumMember(Value = "5148")]
            _5148 = 495,

            /// <summary>
            /// Enum _5149 for value: 5149
            /// </summary>
            [EnumMember(Value = "5149")]
            _5149 = 496,

            /// <summary>
            /// Enum _5150 for value: 5150
            /// </summary>
            [EnumMember(Value = "5150")]
            _5150 = 497,

            /// <summary>
            /// Enum _5151 for value: 5151
            /// </summary>
            [EnumMember(Value = "5151")]
            _5151 = 498,

            /// <summary>
            /// Enum _5152 for value: 5152
            /// </summary>
            [EnumMember(Value = "5152")]
            _5152 = 499,

            /// <summary>
            /// Enum _5153 for value: 5153
            /// </summary>
            [EnumMember(Value = "5153")]
            _5153 = 500,

            /// <summary>
            /// Enum _5154 for value: 5154
            /// </summary>
            [EnumMember(Value = "5154")]
            _5154 = 501,

            /// <summary>
            /// Enum _5156 for value: 5156
            /// </summary>
            [EnumMember(Value = "5156")]
            _5156 = 502,

            /// <summary>
            /// Enum _5157 for value: 5157
            /// </summary>
            [EnumMember(Value = "5157")]
            _5157 = 503,

            /// <summary>
            /// Enum _5158 for value: 5158
            /// </summary>
            [EnumMember(Value = "5158")]
            _5158 = 504,

            /// <summary>
            /// Enum _5159 for value: 5159
            /// </summary>
            [EnumMember(Value = "5159")]
            _5159 = 505,

            /// <summary>
            /// Enum _5160 for value: 5160
            /// </summary>
            [EnumMember(Value = "5160")]
            _5160 = 506,

            /// <summary>
            /// Enum _5161 for value: 5161
            /// </summary>
            [EnumMember(Value = "5161")]
            _5161 = 507,

            /// <summary>
            /// Enum _5162 for value: 5162
            /// </summary>
            [EnumMember(Value = "5162")]
            _5162 = 508,

            /// <summary>
            /// Enum _5163 for value: 5163
            /// </summary>
            [EnumMember(Value = "5163")]
            _5163 = 509,

            /// <summary>
            /// Enum _5164 for value: 5164
            /// </summary>
            [EnumMember(Value = "5164")]
            _5164 = 510,

            /// <summary>
            /// Enum _5165 for value: 5165
            /// </summary>
            [EnumMember(Value = "5165")]
            _5165 = 511,

            /// <summary>
            /// Enum _5166 for value: 5166
            /// </summary>
            [EnumMember(Value = "5166")]
            _5166 = 512,

            /// <summary>
            /// Enum _5167 for value: 5167
            /// </summary>
            [EnumMember(Value = "5167")]
            _5167 = 513,

            /// <summary>
            /// Enum _5168 for value: 5168
            /// </summary>
            [EnumMember(Value = "5168")]
            _5168 = 514,

            /// <summary>
            /// Enum _5169 for value: 5169
            /// </summary>
            [EnumMember(Value = "5169")]
            _5169 = 515,

            /// <summary>
            /// Enum _5170 for value: 5170
            /// </summary>
            [EnumMember(Value = "5170")]
            _5170 = 516,

            /// <summary>
            /// Enum _5171 for value: 5171
            /// </summary>
            [EnumMember(Value = "5171")]
            _5171 = 517,

            /// <summary>
            /// Enum _5172 for value: 5172
            /// </summary>
            [EnumMember(Value = "5172")]
            _5172 = 518,

            /// <summary>
            /// Enum _5173 for value: 5173
            /// </summary>
            [EnumMember(Value = "5173")]
            _5173 = 519,

            /// <summary>
            /// Enum _5174 for value: 5174
            /// </summary>
            [EnumMember(Value = "5174")]
            _5174 = 520,

            /// <summary>
            /// Enum _5175 for value: 5175
            /// </summary>
            [EnumMember(Value = "5175")]
            _5175 = 521,

            /// <summary>
            /// Enum _5176 for value: 5176
            /// </summary>
            [EnumMember(Value = "5176")]
            _5176 = 522,

            /// <summary>
            /// Enum _5177 for value: 5177
            /// </summary>
            [EnumMember(Value = "5177")]
            _5177 = 523,

            /// <summary>
            /// Enum _5178 for value: 5178
            /// </summary>
            [EnumMember(Value = "5178")]
            _5178 = 524,

            /// <summary>
            /// Enum _6000 for value: 6000
            /// </summary>
            [EnumMember(Value = "6000")]
            _6000 = 525,

            /// <summary>
            /// Enum _6001 for value: 6001
            /// </summary>
            [EnumMember(Value = "6001")]
            _6001 = 526,

            /// <summary>
            /// Enum _90001 for value: 90001
            /// </summary>
            [EnumMember(Value = "90001")]
            _90001 = 527

        }

        /// <summary>
        /// Defines CategoryList
        /// </summary>
        public enum CategoryListEnum
        {
            /// <summary>
            /// Enum _1 for value: 1
            /// </summary>
            [EnumMember(Value = "1")]
            _1 = 1,

            /// <summary>
            /// Enum _2 for value: 2
            /// </summary>
            [EnumMember(Value = "2")]
            _2 = 2,

            /// <summary>
            /// Enum _3 for value: 3
            /// </summary>
            [EnumMember(Value = "3")]
            _3 = 3,

            /// <summary>
            /// Enum _4 for value: 4
            /// </summary>
            [EnumMember(Value = "4")]
            _4 = 4,

            /// <summary>
            /// Enum _5 for value: 5
            /// </summary>
            [EnumMember(Value = "5")]
            _5 = 5,

            /// <summary>
            /// Enum _6 for value: 6
            /// </summary>
            [EnumMember(Value = "6")]
            _6 = 6,

            /// <summary>
            /// Enum _7 for value: 7
            /// </summary>
            [EnumMember(Value = "7")]
            _7 = 7,

            /// <summary>
            /// Enum _8 for value: 8
            /// </summary>
            [EnumMember(Value = "8")]
            _8 = 8,

            /// <summary>
            /// Enum _9 for value: 9
            /// </summary>
            [EnumMember(Value = "9")]
            _9 = 9,

            /// <summary>
            /// Enum _10 for value: 10
            /// </summary>
            [EnumMember(Value = "10")]
            _10 = 10,

            /// <summary>
            /// Enum _11 for value: 11
            /// </summary>
            [EnumMember(Value = "11")]
            _11 = 11,

            /// <summary>
            /// Enum _12 for value: 12
            /// </summary>
            [EnumMember(Value = "12")]
            _12 = 12,

            /// <summary>
            /// Enum _13 for value: 13
            /// </summary>
            [EnumMember(Value = "13")]
            _13 = 13,

            /// <summary>
            /// Enum _14 for value: 14
            /// </summary>
            [EnumMember(Value = "14")]
            _14 = 14,

            /// <summary>
            /// Enum _15 for value: 15
            /// </summary>
            [EnumMember(Value = "15")]
            _15 = 15,

            /// <summary>
            /// Enum _16 for value: 16
            /// </summary>
            [EnumMember(Value = "16")]
            _16 = 16,

            /// <summary>
            /// Enum _17 for value: 17
            /// </summary>
            [EnumMember(Value = "17")]
            _17 = 17,

            /// <summary>
            /// Enum _18 for value: 18
            /// </summary>
            [EnumMember(Value = "18")]
            _18 = 18,

            /// <summary>
            /// Enum _19 for value: 19
            /// </summary>
            [EnumMember(Value = "19")]
            _19 = 19,

            /// <summary>
            /// Enum _20 for value: 20
            /// </summary>
            [EnumMember(Value = "20")]
            _20 = 20,

            /// <summary>
            /// Enum _21 for value: 21
            /// </summary>
            [EnumMember(Value = "21")]
            _21 = 21,

            /// <summary>
            /// Enum _22 for value: 22
            /// </summary>
            [EnumMember(Value = "22")]
            _22 = 22,

            /// <summary>
            /// Enum _23 for value: 23
            /// </summary>
            [EnumMember(Value = "23")]
            _23 = 23,

            /// <summary>
            /// Enum _24 for value: 24
            /// </summary>
            [EnumMember(Value = "24")]
            _24 = 24,

            /// <summary>
            /// Enum _25 for value: 25
            /// </summary>
            [EnumMember(Value = "25")]
            _25 = 25,

            /// <summary>
            /// Enum _26 for value: 26
            /// </summary>
            [EnumMember(Value = "26")]
            _26 = 26,

            /// <summary>
            /// Enum _27 for value: 27
            /// </summary>
            [EnumMember(Value = "27")]
            _27 = 27,

            /// <summary>
            /// Enum _28 for value: 28
            /// </summary>
            [EnumMember(Value = "28")]
            _28 = 28,

            /// <summary>
            /// Enum _29 for value: 29
            /// </summary>
            [EnumMember(Value = "29")]
            _29 = 29,

            /// <summary>
            /// Enum _30 for value: 30
            /// </summary>
            [EnumMember(Value = "30")]
            _30 = 30,

            /// <summary>
            /// Enum _31 for value: 31
            /// </summary>
            [EnumMember(Value = "31")]
            _31 = 31,

            /// <summary>
            /// Enum _32 for value: 32
            /// </summary>
            [EnumMember(Value = "32")]
            _32 = 32,

            /// <summary>
            /// Enum _33 for value: 33
            /// </summary>
            [EnumMember(Value = "33")]
            _33 = 33,

            /// <summary>
            /// Enum _34 for value: 34
            /// </summary>
            [EnumMember(Value = "34")]
            _34 = 34,

            /// <summary>
            /// Enum _35 for value: 35
            /// </summary>
            [EnumMember(Value = "35")]
            _35 = 35,

            /// <summary>
            /// Enum _36 for value: 36
            /// </summary>
            [EnumMember(Value = "36")]
            _36 = 36,

            /// <summary>
            /// Enum _37 for value: 37
            /// </summary>
            [EnumMember(Value = "37")]
            _37 = 37,

            /// <summary>
            /// Enum _38 for value: 38
            /// </summary>
            [EnumMember(Value = "38")]
            _38 = 38,

            /// <summary>
            /// Enum _39 for value: 39
            /// </summary>
            [EnumMember(Value = "39")]
            _39 = 39,

            /// <summary>
            /// Enum _40 for value: 40
            /// </summary>
            [EnumMember(Value = "40")]
            _40 = 40,

            /// <summary>
            /// Enum _41 for value: 41
            /// </summary>
            [EnumMember(Value = "41")]
            _41 = 41,

            /// <summary>
            /// Enum _42 for value: 42
            /// </summary>
            [EnumMember(Value = "42")]
            _42 = 42,

            /// <summary>
            /// Enum _43 for value: 43
            /// </summary>
            [EnumMember(Value = "43")]
            _43 = 43,

            /// <summary>
            /// Enum _44 for value: 44
            /// </summary>
            [EnumMember(Value = "44")]
            _44 = 44,

            /// <summary>
            /// Enum _45 for value: 45
            /// </summary>
            [EnumMember(Value = "45")]
            _45 = 45,

            /// <summary>
            /// Enum _46 for value: 46
            /// </summary>
            [EnumMember(Value = "46")]
            _46 = 46,

            /// <summary>
            /// Enum _47 for value: 47
            /// </summary>
            [EnumMember(Value = "47")]
            _47 = 47,

            /// <summary>
            /// Enum _48 for value: 48
            /// </summary>
            [EnumMember(Value = "48")]
            _48 = 48,

            /// <summary>
            /// Enum _49 for value: 49
            /// </summary>
            [EnumMember(Value = "49")]
            _49 = 49,

            /// <summary>
            /// Enum _50 for value: 50
            /// </summary>
            [EnumMember(Value = "50")]
            _50 = 50,

            /// <summary>
            /// Enum _51 for value: 51
            /// </summary>
            [EnumMember(Value = "51")]
            _51 = 51,

            /// <summary>
            /// Enum _52 for value: 52
            /// </summary>
            [EnumMember(Value = "52")]
            _52 = 52,

            /// <summary>
            /// Enum _53 for value: 53
            /// </summary>
            [EnumMember(Value = "53")]
            _53 = 53,

            /// <summary>
            /// Enum _54 for value: 54
            /// </summary>
            [EnumMember(Value = "54")]
            _54 = 54,

            /// <summary>
            /// Enum _55 for value: 55
            /// </summary>
            [EnumMember(Value = "55")]
            _55 = 55,

            /// <summary>
            /// Enum _56 for value: 56
            /// </summary>
            [EnumMember(Value = "56")]
            _56 = 56,

            /// <summary>
            /// Enum _57 for value: 57
            /// </summary>
            [EnumMember(Value = "57")]
            _57 = 57,

            /// <summary>
            /// Enum _58 for value: 58
            /// </summary>
            [EnumMember(Value = "58")]
            _58 = 58,

            /// <summary>
            /// Enum _59 for value: 59
            /// </summary>
            [EnumMember(Value = "59")]
            _59 = 59,

            /// <summary>
            /// Enum _60 for value: 60
            /// </summary>
            [EnumMember(Value = "60")]
            _60 = 60,

            /// <summary>
            /// Enum _61 for value: 61
            /// </summary>
            [EnumMember(Value = "61")]
            _61 = 61,

            /// <summary>
            /// Enum _62 for value: 62
            /// </summary>
            [EnumMember(Value = "62")]
            _62 = 62,

            /// <summary>
            /// Enum _5000 for value: 5000
            /// </summary>
            [EnumMember(Value = "5000")]
            _5000 = 63,

            /// <summary>
            /// Enum _5001 for value: 5001
            /// </summary>
            [EnumMember(Value = "5001")]
            _5001 = 64,

            /// <summary>
            /// Enum _5002 for value: 5002
            /// </summary>
            [EnumMember(Value = "5002")]
            _5002 = 65,

            /// <summary>
            /// Enum _5003 for value: 5003
            /// </summary>
            [EnumMember(Value = "5003")]
            _5003 = 66,

            /// <summary>
            /// Enum _5004 for value: 5004
            /// </summary>
            [EnumMember(Value = "5004")]
            _5004 = 67,

            /// <summary>
            /// Enum _5005 for value: 5005
            /// </summary>
            [EnumMember(Value = "5005")]
            _5005 = 68,

            /// <summary>
            /// Enum _5006 for value: 5006
            /// </summary>
            [EnumMember(Value = "5006")]
            _5006 = 69,

            /// <summary>
            /// Enum _5007 for value: 5007
            /// </summary>
            [EnumMember(Value = "5007")]
            _5007 = 70,

            /// <summary>
            /// Enum _5008 for value: 5008
            /// </summary>
            [EnumMember(Value = "5008")]
            _5008 = 71,

            /// <summary>
            /// Enum _5009 for value: 5009
            /// </summary>
            [EnumMember(Value = "5009")]
            _5009 = 72

        }

        /// <summary>
        /// Initializes a new instance of the <see cref="AvailablePropertiesInner1" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected AvailablePropertiesInner1() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="AvailablePropertiesInner1" /> class.
        /// </summary>
        /// <param name="code">The properties unique code/ID. (required).</param>
        /// <param name="languageCode">The language code of the language in which the property description is written.&lt;p&gt;Please note that beside the general restrictions listed below only languages configured during system setup for your respective tenant are allowed.&lt;/p&gt;&lt;p&gt;See also &lt;a href&#x3D;\&quot;#isolanguage-codes\&quot;&gt;in the appendix&lt;/a&gt;.&lt;/p&gt; (required).</param>
        /// <param name="currencyCode">The currency code for the currency in which prices are returned.&lt;p&gt;See also &lt;a href&#x3D;\&quot;#currencycodes\&quot;&gt;in the appendix&lt;/a&gt;.&lt;/p&gt; (required).</param>
        /// <param name="unitSystem">The unit system (either \&quot;metric\&quot; or \&quot;imperial\&quot;) used for measurements. (required).</param>
        /// <param name="name">The name of the property. (required).</param>
        /// <param name="uri">A URI for the property. (required).</param>
        /// <param name="serviceList">A list of service codes indicating the services and amenities the property has.&lt;p&gt;See also &lt;a href&#x3D;\&quot;#servicecodes\&quot;&gt;in the appendix&lt;/a&gt;.&lt;/p&gt; (required).</param>
        /// <param name="categoryList">A list of property class type codes indicating the types of the property.&lt;p&gt;See also &lt;a href&#x3D;\&quot;#propertyclass-type-codes\&quot;&gt;in the appendix&lt;/a&gt;.&lt;/p&gt; (required).</param>
        /// <param name="uriPath">A URI path for the property. (required).</param>
        /// <param name="text">A description of the property. (required).</param>
        /// <param name="geo">geo.</param>
        /// <param name="mediaList">A list of media objects for the property. (required).</param>
        /// <param name="attractionList">A list of objects describing the attractions available at the property. (required).</param>
        /// <param name="lowestPrice">lowestPrice (required).</param>
        public AvailablePropertiesInner1(string code = default(string), LanguageCodeEnum languageCode = default(LanguageCodeEnum), CurrencyCodeEnum currencyCode = default(CurrencyCodeEnum), UnitSystemEnum unitSystem = default(UnitSystemEnum), string name = default(string), string uri = default(string), List<ServiceListEnum> serviceList = default(List<ServiceListEnum>), List<CategoryListEnum> categoryList = default(List<CategoryListEnum>), string uriPath = default(string), string text = default(string), AvailablePropertiesInner1Geo geo = default(AvailablePropertiesInner1Geo), List<AvailablePropertiesInner1MediaListInner> mediaList = default(List<AvailablePropertiesInner1MediaListInner>), List<AvailablePropertiesInner1AttractionListInner> attractionList = default(List<AvailablePropertiesInner1AttractionListInner>), AvailablePropertiesInner1LowestPrice lowestPrice = default(AvailablePropertiesInner1LowestPrice))
        {
            // to ensure "code" is required (not null)
            if (code == null)
            {
                throw new InvalidDataException("code is a required property for AvailablePropertiesInner1 and cannot be null");
            }
            else
            {
                this.Code = code;
            }

            // to ensure "languageCode" is required (not null)
            if (languageCode == null)
            {
                throw new InvalidDataException("languageCode is a required property for AvailablePropertiesInner1 and cannot be null");
            }
            else
            {
                this.LanguageCode = languageCode;
            }

            // to ensure "currencyCode" is required (not null)
            if (currencyCode == null)
            {
                throw new InvalidDataException("currencyCode is a required property for AvailablePropertiesInner1 and cannot be null");
            }
            else
            {
                this.CurrencyCode = currencyCode;
            }

            // to ensure "unitSystem" is required (not null)
            if (unitSystem == null)
            {
                throw new InvalidDataException("unitSystem is a required property for AvailablePropertiesInner1 and cannot be null");
            }
            else
            {
                this.UnitSystem = unitSystem;
            }

            // to ensure "name" is required (not null)
            if (name == null)
            {
                throw new InvalidDataException("name is a required property for AvailablePropertiesInner1 and cannot be null");
            }
            else
            {
                this.Name = name;
            }

            // to ensure "uri" is required (not null)
            if (uri == null)
            {
                throw new InvalidDataException("uri is a required property for AvailablePropertiesInner1 and cannot be null");
            }
            else
            {
                this.Uri = uri;
            }

            // to ensure "serviceList" is required (not null)
            if (serviceList == null)
            {
                throw new InvalidDataException("serviceList is a required property for AvailablePropertiesInner1 and cannot be null");
            }
            else
            {
                this.ServiceList = serviceList;
            }

            // to ensure "categoryList" is required (not null)
            if (categoryList == null)
            {
                throw new InvalidDataException("categoryList is a required property for AvailablePropertiesInner1 and cannot be null");
            }
            else
            {
                this.CategoryList = categoryList;
            }

            // to ensure "uriPath" is required (not null)
            if (uriPath == null)
            {
                throw new InvalidDataException("uriPath is a required property for AvailablePropertiesInner1 and cannot be null");
            }
            else
            {
                this.UriPath = uriPath;
            }

            // to ensure "text" is required (not null)
            if (text == null)
            {
                throw new InvalidDataException("text is a required property for AvailablePropertiesInner1 and cannot be null");
            }
            else
            {
                this.Text = text;
            }

            // to ensure "mediaList" is required (not null)
            if (mediaList == null)
            {
                throw new InvalidDataException("mediaList is a required property for AvailablePropertiesInner1 and cannot be null");
            }
            else
            {
                this.MediaList = mediaList;
            }

            // to ensure "attractionList" is required (not null)
            if (attractionList == null)
            {
                throw new InvalidDataException("attractionList is a required property for AvailablePropertiesInner1 and cannot be null");
            }
            else
            {
                this.AttractionList = attractionList;
            }

            // to ensure "lowestPrice" is required (not null)
            if (lowestPrice == null)
            {
                throw new InvalidDataException("lowestPrice is a required property for AvailablePropertiesInner1 and cannot be null");
            }
            else
            {
                this.LowestPrice = lowestPrice;
            }

            this.Geo = geo;
        }

        /// <summary>
        /// The properties unique code/ID.
        /// </summary>
        /// <value>The properties unique code/ID.</value>
        [DataMember(Name="code", EmitDefaultValue=true)]
        public string Code { get; set; }




        /// <summary>
        /// The name of the property.
        /// </summary>
        /// <value>The name of the property.</value>
        [DataMember(Name="name", EmitDefaultValue=true)]
        public string Name { get; set; }

        /// <summary>
        /// A URI for the property.
        /// </summary>
        /// <value>A URI for the property.</value>
        [DataMember(Name="uri", EmitDefaultValue=true)]
        public string Uri { get; set; }

        /// <summary>
        /// A list of service codes indicating the services and amenities the property has.&lt;p&gt;See also &lt;a href&#x3D;\&quot;#servicecodes\&quot;&gt;in the appendix&lt;/a&gt;.&lt;/p&gt;
        /// </summary>
        /// <value>A list of service codes indicating the services and amenities the property has.&lt;p&gt;See also &lt;a href&#x3D;\&quot;#servicecodes\&quot;&gt;in the appendix&lt;/a&gt;.&lt;/p&gt;</value>
        [DataMember(Name="serviceList", EmitDefaultValue=true)]
        public List<AvailablePropertiesInner1.ServiceListEnum> ServiceList { get; set; }

        /// <summary>
        /// A list of property class type codes indicating the types of the property.&lt;p&gt;See also &lt;a href&#x3D;\&quot;#propertyclass-type-codes\&quot;&gt;in the appendix&lt;/a&gt;.&lt;/p&gt;
        /// </summary>
        /// <value>A list of property class type codes indicating the types of the property.&lt;p&gt;See also &lt;a href&#x3D;\&quot;#propertyclass-type-codes\&quot;&gt;in the appendix&lt;/a&gt;.&lt;/p&gt;</value>
        [DataMember(Name="categoryList", EmitDefaultValue=true)]
        public List<AvailablePropertiesInner1.CategoryListEnum> CategoryList { get; set; }

        /// <summary>
        /// A URI path for the property.
        /// </summary>
        /// <value>A URI path for the property.</value>
        [DataMember(Name="uriPath", EmitDefaultValue=true)]
        public string UriPath { get; set; }

        /// <summary>
        /// A description of the property.
        /// </summary>
        /// <value>A description of the property.</value>
        [DataMember(Name="text", EmitDefaultValue=true)]
        public string Text { get; set; }

        /// <summary>
        /// Gets or Sets Geo
        /// </summary>
        [DataMember(Name="geo", EmitDefaultValue=false)]
        public AvailablePropertiesInner1Geo Geo { get; set; }

        /// <summary>
        /// A list of media objects for the property.
        /// </summary>
        /// <value>A list of media objects for the property.</value>
        [DataMember(Name="mediaList", EmitDefaultValue=true)]
        public List<AvailablePropertiesInner1MediaListInner> MediaList { get; set; }

        /// <summary>
        /// A list of objects describing the attractions available at the property.
        /// </summary>
        /// <value>A list of objects describing the attractions available at the property.</value>
        [DataMember(Name="attractionList", EmitDefaultValue=true)]
        public List<AvailablePropertiesInner1AttractionListInner> AttractionList { get; set; }

        /// <summary>
        /// Gets or Sets LowestPrice
        /// </summary>
        [DataMember(Name="lowestPrice", EmitDefaultValue=true)]
        public AvailablePropertiesInner1LowestPrice LowestPrice { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AvailablePropertiesInner1 {\n");
            sb.Append("  Code: ").Append(Code).Append("\n");
            sb.Append("  LanguageCode: ").Append(LanguageCode).Append("\n");
            sb.Append("  CurrencyCode: ").Append(CurrencyCode).Append("\n");
            sb.Append("  UnitSystem: ").Append(UnitSystem).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Uri: ").Append(Uri).Append("\n");
            sb.Append("  ServiceList: ").Append(ServiceList).Append("\n");
            sb.Append("  CategoryList: ").Append(CategoryList).Append("\n");
            sb.Append("  UriPath: ").Append(UriPath).Append("\n");
            sb.Append("  Text: ").Append(Text).Append("\n");
            sb.Append("  Geo: ").Append(Geo).Append("\n");
            sb.Append("  MediaList: ").Append(MediaList).Append("\n");
            sb.Append("  AttractionList: ").Append(AttractionList).Append("\n");
            sb.Append("  LowestPrice: ").Append(LowestPrice).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AvailablePropertiesInner1);
        }

        /// <summary>
        /// Returns true if AvailablePropertiesInner1 instances are equal
        /// </summary>
        /// <param name="input">Instance of AvailablePropertiesInner1 to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AvailablePropertiesInner1 input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Code == input.Code ||
                    (this.Code != null &&
                    this.Code.Equals(input.Code))
                ) && 
                (
                    this.LanguageCode == input.LanguageCode ||
                    (this.LanguageCode != null &&
                    this.LanguageCode.Equals(input.LanguageCode))
                ) && 
                (
                    this.CurrencyCode == input.CurrencyCode ||
                    (this.CurrencyCode != null &&
                    this.CurrencyCode.Equals(input.CurrencyCode))
                ) && 
                (
                    this.UnitSystem == input.UnitSystem ||
                    (this.UnitSystem != null &&
                    this.UnitSystem.Equals(input.UnitSystem))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.Uri == input.Uri ||
                    (this.Uri != null &&
                    this.Uri.Equals(input.Uri))
                ) && 
                (
                    this.ServiceList == input.ServiceList ||
                    this.ServiceList != null &&
                    input.ServiceList != null &&
                    this.ServiceList.SequenceEqual(input.ServiceList)
                ) && 
                (
                    this.CategoryList == input.CategoryList ||
                    this.CategoryList != null &&
                    input.CategoryList != null &&
                    this.CategoryList.SequenceEqual(input.CategoryList)
                ) && 
                (
                    this.UriPath == input.UriPath ||
                    (this.UriPath != null &&
                    this.UriPath.Equals(input.UriPath))
                ) && 
                (
                    this.Text == input.Text ||
                    (this.Text != null &&
                    this.Text.Equals(input.Text))
                ) && 
                (
                    this.Geo == input.Geo ||
                    (this.Geo != null &&
                    this.Geo.Equals(input.Geo))
                ) && 
                (
                    this.MediaList == input.MediaList ||
                    this.MediaList != null &&
                    input.MediaList != null &&
                    this.MediaList.SequenceEqual(input.MediaList)
                ) && 
                (
                    this.AttractionList == input.AttractionList ||
                    this.AttractionList != null &&
                    input.AttractionList != null &&
                    this.AttractionList.SequenceEqual(input.AttractionList)
                ) && 
                (
                    this.LowestPrice == input.LowestPrice ||
                    (this.LowestPrice != null &&
                    this.LowestPrice.Equals(input.LowestPrice))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Code != null)
                    hashCode = hashCode * 59 + this.Code.GetHashCode();
                if (this.LanguageCode != null)
                    hashCode = hashCode * 59 + this.LanguageCode.GetHashCode();
                if (this.CurrencyCode != null)
                    hashCode = hashCode * 59 + this.CurrencyCode.GetHashCode();
                if (this.UnitSystem != null)
                    hashCode = hashCode * 59 + this.UnitSystem.GetHashCode();
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.Uri != null)
                    hashCode = hashCode * 59 + this.Uri.GetHashCode();
                if (this.ServiceList != null)
                    hashCode = hashCode * 59 + this.ServiceList.GetHashCode();
                if (this.CategoryList != null)
                    hashCode = hashCode * 59 + this.CategoryList.GetHashCode();
                if (this.UriPath != null)
                    hashCode = hashCode * 59 + this.UriPath.GetHashCode();
                if (this.Text != null)
                    hashCode = hashCode * 59 + this.Text.GetHashCode();
                if (this.Geo != null)
                    hashCode = hashCode * 59 + this.Geo.GetHashCode();
                if (this.MediaList != null)
                    hashCode = hashCode * 59 + this.MediaList.GetHashCode();
                if (this.AttractionList != null)
                    hashCode = hashCode * 59 + this.AttractionList.GetHashCode();
                if (this.LowestPrice != null)
                    hashCode = hashCode * 59 + this.LowestPrice.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
