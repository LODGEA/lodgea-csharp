/*
 * lodgea-csharp
 *
 * LODGEA SDK for CSharp. Check out https://docs.lodgea.io for more information.
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: support@lodgea.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = lodgea-csharp.Client.OpenAPIDateConverter;

namespace lodgea-csharp.com.lodgea.model
{
    /// <summary>
    /// V1PropertyGetPost200ResponsePropertyPolicyListInner
    /// </summary>
    [DataContract]
    public partial class V1PropertyGetPost200ResponsePropertyPolicyListInner :  IEquatable<V1PropertyGetPost200ResponsePropertyPolicyListInner>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="V1PropertyGetPost200ResponsePropertyPolicyListInner" /> class.
        /// </summary>
        /// <param name="checkInTime">checkInTime.</param>
        /// <param name="checkOutTime">checkOutTime.</param>
        /// <param name="totalGuestCount">totalGuestCount.</param>
        /// <param name="cancellationPolicyList">cancellationPolicyList.</param>
        /// <param name="advanceBookingMin">advanceBookingMin.</param>
        /// <param name="advanceBookingMax">advanceBookingMax.</param>
        /// <param name="petsPolicy">petsPolicy.</param>
        /// <param name="prepaymentPolicy">prepaymentPolicy.</param>
        /// <param name="guaranteePolicy">guaranteePolicy.</param>
        /// <param name="taxPolicyList">taxPolicyList.</param>
        /// <param name="feePolicyList">feePolicyList.</param>
        public V1PropertyGetPost200ResponsePropertyPolicyListInner(decimal checkInTime = default(decimal), decimal checkOutTime = default(decimal), decimal totalGuestCount = default(decimal), List<string> cancellationPolicyList = default(List<string>), decimal advanceBookingMin = default(decimal), decimal advanceBookingMax = default(decimal), V1PropertyGetPost200ResponsePropertyPolicyListInnerPetsPolicy petsPolicy = default(V1PropertyGetPost200ResponsePropertyPolicyListInnerPetsPolicy), string prepaymentPolicy = default(string), string guaranteePolicy = default(string), List<V1PropertyGetPost200ResponsePropertyPolicyListInnerTaxPolicyListInner> taxPolicyList = default(List<V1PropertyGetPost200ResponsePropertyPolicyListInnerTaxPolicyListInner>), List<string> feePolicyList = default(List<string>))
        {
            this.CheckInTime = checkInTime;
            this.CheckOutTime = checkOutTime;
            this.TotalGuestCount = totalGuestCount;
            this.CancellationPolicyList = cancellationPolicyList;
            this.AdvanceBookingMin = advanceBookingMin;
            this.AdvanceBookingMax = advanceBookingMax;
            this.PetsPolicy = petsPolicy;
            this.PrepaymentPolicy = prepaymentPolicy;
            this.GuaranteePolicy = guaranteePolicy;
            this.TaxPolicyList = taxPolicyList;
            this.FeePolicyList = feePolicyList;
        }

        /// <summary>
        /// Gets or Sets CheckInTime
        /// </summary>
        [DataMember(Name="checkInTime", EmitDefaultValue=false)]
        public decimal CheckInTime { get; set; }

        /// <summary>
        /// Gets or Sets CheckOutTime
        /// </summary>
        [DataMember(Name="checkOutTime", EmitDefaultValue=false)]
        public decimal CheckOutTime { get; set; }

        /// <summary>
        /// Gets or Sets TotalGuestCount
        /// </summary>
        [DataMember(Name="totalGuestCount", EmitDefaultValue=false)]
        public decimal TotalGuestCount { get; set; }

        /// <summary>
        /// Gets or Sets CancellationPolicyList
        /// </summary>
        [DataMember(Name="cancellationPolicyList", EmitDefaultValue=false)]
        public List<string> CancellationPolicyList { get; set; }

        /// <summary>
        /// Gets or Sets AdvanceBookingMin
        /// </summary>
        [DataMember(Name="advanceBookingMin", EmitDefaultValue=false)]
        public decimal AdvanceBookingMin { get; set; }

        /// <summary>
        /// Gets or Sets AdvanceBookingMax
        /// </summary>
        [DataMember(Name="advanceBookingMax", EmitDefaultValue=false)]
        public decimal AdvanceBookingMax { get; set; }

        /// <summary>
        /// Gets or Sets PetsPolicy
        /// </summary>
        [DataMember(Name="petsPolicy", EmitDefaultValue=false)]
        public V1PropertyGetPost200ResponsePropertyPolicyListInnerPetsPolicy PetsPolicy { get; set; }

        /// <summary>
        /// Gets or Sets PrepaymentPolicy
        /// </summary>
        [DataMember(Name="prepaymentPolicy", EmitDefaultValue=false)]
        public string PrepaymentPolicy { get; set; }

        /// <summary>
        /// Gets or Sets GuaranteePolicy
        /// </summary>
        [DataMember(Name="guaranteePolicy", EmitDefaultValue=false)]
        public string GuaranteePolicy { get; set; }

        /// <summary>
        /// Gets or Sets TaxPolicyList
        /// </summary>
        [DataMember(Name="taxPolicyList", EmitDefaultValue=false)]
        public List<V1PropertyGetPost200ResponsePropertyPolicyListInnerTaxPolicyListInner> TaxPolicyList { get; set; }

        /// <summary>
        /// Gets or Sets FeePolicyList
        /// </summary>
        [DataMember(Name="feePolicyList", EmitDefaultValue=false)]
        public List<string> FeePolicyList { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class V1PropertyGetPost200ResponsePropertyPolicyListInner {\n");
            sb.Append("  CheckInTime: ").Append(CheckInTime).Append("\n");
            sb.Append("  CheckOutTime: ").Append(CheckOutTime).Append("\n");
            sb.Append("  TotalGuestCount: ").Append(TotalGuestCount).Append("\n");
            sb.Append("  CancellationPolicyList: ").Append(CancellationPolicyList).Append("\n");
            sb.Append("  AdvanceBookingMin: ").Append(AdvanceBookingMin).Append("\n");
            sb.Append("  AdvanceBookingMax: ").Append(AdvanceBookingMax).Append("\n");
            sb.Append("  PetsPolicy: ").Append(PetsPolicy).Append("\n");
            sb.Append("  PrepaymentPolicy: ").Append(PrepaymentPolicy).Append("\n");
            sb.Append("  GuaranteePolicy: ").Append(GuaranteePolicy).Append("\n");
            sb.Append("  TaxPolicyList: ").Append(TaxPolicyList).Append("\n");
            sb.Append("  FeePolicyList: ").Append(FeePolicyList).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as V1PropertyGetPost200ResponsePropertyPolicyListInner);
        }

        /// <summary>
        /// Returns true if V1PropertyGetPost200ResponsePropertyPolicyListInner instances are equal
        /// </summary>
        /// <param name="input">Instance of V1PropertyGetPost200ResponsePropertyPolicyListInner to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(V1PropertyGetPost200ResponsePropertyPolicyListInner input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.CheckInTime == input.CheckInTime ||
                    (this.CheckInTime != null &&
                    this.CheckInTime.Equals(input.CheckInTime))
                ) && 
                (
                    this.CheckOutTime == input.CheckOutTime ||
                    (this.CheckOutTime != null &&
                    this.CheckOutTime.Equals(input.CheckOutTime))
                ) && 
                (
                    this.TotalGuestCount == input.TotalGuestCount ||
                    (this.TotalGuestCount != null &&
                    this.TotalGuestCount.Equals(input.TotalGuestCount))
                ) && 
                (
                    this.CancellationPolicyList == input.CancellationPolicyList ||
                    this.CancellationPolicyList != null &&
                    input.CancellationPolicyList != null &&
                    this.CancellationPolicyList.SequenceEqual(input.CancellationPolicyList)
                ) && 
                (
                    this.AdvanceBookingMin == input.AdvanceBookingMin ||
                    (this.AdvanceBookingMin != null &&
                    this.AdvanceBookingMin.Equals(input.AdvanceBookingMin))
                ) && 
                (
                    this.AdvanceBookingMax == input.AdvanceBookingMax ||
                    (this.AdvanceBookingMax != null &&
                    this.AdvanceBookingMax.Equals(input.AdvanceBookingMax))
                ) && 
                (
                    this.PetsPolicy == input.PetsPolicy ||
                    (this.PetsPolicy != null &&
                    this.PetsPolicy.Equals(input.PetsPolicy))
                ) && 
                (
                    this.PrepaymentPolicy == input.PrepaymentPolicy ||
                    (this.PrepaymentPolicy != null &&
                    this.PrepaymentPolicy.Equals(input.PrepaymentPolicy))
                ) && 
                (
                    this.GuaranteePolicy == input.GuaranteePolicy ||
                    (this.GuaranteePolicy != null &&
                    this.GuaranteePolicy.Equals(input.GuaranteePolicy))
                ) && 
                (
                    this.TaxPolicyList == input.TaxPolicyList ||
                    this.TaxPolicyList != null &&
                    input.TaxPolicyList != null &&
                    this.TaxPolicyList.SequenceEqual(input.TaxPolicyList)
                ) && 
                (
                    this.FeePolicyList == input.FeePolicyList ||
                    this.FeePolicyList != null &&
                    input.FeePolicyList != null &&
                    this.FeePolicyList.SequenceEqual(input.FeePolicyList)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CheckInTime != null)
                    hashCode = hashCode * 59 + this.CheckInTime.GetHashCode();
                if (this.CheckOutTime != null)
                    hashCode = hashCode * 59 + this.CheckOutTime.GetHashCode();
                if (this.TotalGuestCount != null)
                    hashCode = hashCode * 59 + this.TotalGuestCount.GetHashCode();
                if (this.CancellationPolicyList != null)
                    hashCode = hashCode * 59 + this.CancellationPolicyList.GetHashCode();
                if (this.AdvanceBookingMin != null)
                    hashCode = hashCode * 59 + this.AdvanceBookingMin.GetHashCode();
                if (this.AdvanceBookingMax != null)
                    hashCode = hashCode * 59 + this.AdvanceBookingMax.GetHashCode();
                if (this.PetsPolicy != null)
                    hashCode = hashCode * 59 + this.PetsPolicy.GetHashCode();
                if (this.PrepaymentPolicy != null)
                    hashCode = hashCode * 59 + this.PrepaymentPolicy.GetHashCode();
                if (this.GuaranteePolicy != null)
                    hashCode = hashCode * 59 + this.GuaranteePolicy.GetHashCode();
                if (this.TaxPolicyList != null)
                    hashCode = hashCode * 59 + this.TaxPolicyList.GetHashCode();
                if (this.FeePolicyList != null)
                    hashCode = hashCode * 59 + this.FeePolicyList.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
