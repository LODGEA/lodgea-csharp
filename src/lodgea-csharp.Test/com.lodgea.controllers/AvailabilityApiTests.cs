/*
 * lodgea-csharp
 *
 * LODGEA SDK for CSharp. Check out https://lodgea.redoc.ly for more information.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@lodgea.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using lodgea-csharp.Client;
using lodgea-csharp.com.lodgea.controllers;
using lodgea-csharp.com.lodgea.model;

namespace lodgea-csharp.Test
{
    /// <summary>
    ///  Class for testing AvailabilityApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class AvailabilityApiTests
    {
        private AvailabilityApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new AvailabilityApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of AvailabilityApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' AvailabilityApi
            //Assert.IsInstanceOf(typeof(AvailabilityApi), instance);
        }

        
        /// <summary>
        /// Test V1AvailabilitySearchPost
        /// </summary>
        [Test]
        public void V1AvailabilitySearchPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AvailabilitySearch availabilitySearch = null;
            //var response = instance.V1AvailabilitySearchPost(availabilitySearch);
            //Assert.IsInstanceOf(typeof(V1AvailabilitySearchPost200Response), response, "response is V1AvailabilitySearchPost200Response");
        }
        
    }

}
